
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initrightASSIGNleftANDrightNOTnonassocLOWEREQUALLOWER_EQUALleftPLUSMINUSleftTIMESDIVrightISNULLUMINUSrightPOWleftDOTAND ASSIGN BOOL CLASS COLON COMMA DIV DO DOT ELSE EQUAL EXTENDS FALSE IF IN INT32 INTEGER_LITERAL ISNULL LBRACE LET LOWER LOWER_EQUAL LPAR MINUS NEW NOT OBJECT_IDENTIFIER PLUS POW RBRACE RPAR SELF SEMICOLON STRING THEN TIMES TRUE TYPE_IDENTIFIER UNIT WHILE string_literalinit : programprogram : program class\n                    | classclass : field\n                | methodclass : CLASS errorclass : expression\n                | TYPE_IDENTIFIER\n                | blockclass : CLASS new_class_scope class-body\n                | CLASS new_class_scope EXTENDS TYPE_IDENTIFIER class-bodynew_class_scope : TYPE_IDENTIFIERclass-body : LBRACE class-body-in RBRACEclass-body : LBRACE class-body-in errorclass-body-in : class-body-in fieldclass-body-in : class-body-in methodclass-body-in : field : OBJECT_IDENTIFIER COLON type SEMICOLON\n                | OBJECT_IDENTIFIER COLON type ASSIGN expression SEMICOLONmethod : method_identifier LPAR formals RPAR COLON type blockmethod_identifier : OBJECT_IDENTIFIERtype : TYPE_IDENTIFIER\n                | INT32\n                | BOOL\n                | STRING\n                | UNIT formals : formal\n                | formals COMMA formal\n                | formal : OBJECT_IDENTIFIER COLON typeblock : block_lbrace inblock RBRACEblock_lbrace : LBRACEinblock : inblock SEMICOLON expression\n                | expression\n                |inblock : inblock error expression : IF expression THEN expression\n                    | IF expression THEN expression ELSE expressionexpression : WHILE expression DO expressionexpression : LET OBJECT_IDENTIFIER COLON type IN expression\n                    | LET OBJECT_IDENTIFIER COLON type ASSIGN expression IN expressionexpression : OBJECT_IDENTIFIER ASSIGN expressionexpression : NOT expressionexpression : MINUS expression %prec UMINUSexpression : ISNULL expressionexpression : expression EQUAL expressionexpression : expression AND expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIV expression\n                  | expression POW expressionexpression : expression LOWER_EQUAL expression\n                    | expression LOWER expressionexpression : call_identifier LPAR args RPAR\n                    | expression DOT call_identifier LPAR args RPARcall_identifier : OBJECT_IDENTIFIERexpression : NEW TYPE_IDENTIFIERexpression : OBJECT_IDENTIFIERexpression : SELFexpression : literalexpression : LPAR RPARexpression : LPAR expression RPARexpression : LPAR expression error\n                    | error expression RPARexpression : blockexpression : errorargs : args COMMA expression\n                | expression\n                |literal : string_literalliteral : INTEGER_LITERALliteral : TRUE \n                    | FALSE'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,7,8,9,10,11,22,23,25,26,27,28,30,31,35,36,50,55,56,57,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,94,100,105,106,108,111,112,113,126,127,129,130,132,134,],[6,6,-3,-4,-5,-67,-7,-8,-9,-59,-60,-61,-71,-72,-73,-74,-2,-6,-59,-66,-62,-43,-44,-45,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,-31,-18,-37,-39,-55,-11,-13,-14,-56,-19,-38,-40,-20,-41,]),'TYPE_IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,21,22,23,25,26,27,28,30,31,35,36,47,50,55,56,57,59,62,63,65,66,67,68,69,70,71,72,73,74,83,87,88,91,94,100,104,105,106,108,111,112,113,119,126,127,129,130,132,134,],[9,9,-3,-4,-5,33,-67,-7,-8,-9,-59,59,-60,-61,-71,-72,-73,-74,-2,-6,-59,-66,78,-62,-43,-44,-45,-58,-10,97,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,78,-31,-18,78,-37,-39,-55,-11,-13,-14,78,-56,-19,-38,-40,-20,-41,]),'OBJECT_IDENTIFIER':([0,2,3,4,5,7,8,9,10,11,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,55,56,57,58,59,62,64,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,98,99,100,101,103,105,106,108,109,111,112,113,114,115,122,123,124,126,127,129,130,132,133,134,],[11,11,-3,-4,-5,35,-7,-8,-9,-59,35,35,35,54,35,35,35,-60,-61,35,-71,-72,-73,-74,-32,-2,-6,-59,-66,35,35,35,35,35,35,35,35,35,76,35,86,-62,-43,-44,-45,35,-58,-10,-17,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,35,35,-31,35,116,35,-18,35,86,-37,-39,-55,35,-11,-13,-14,-15,-16,35,35,35,-56,-19,-38,-40,-20,35,-41,]),'IF':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[14,14,-3,-4,-5,14,-7,-8,-9,-59,14,14,14,14,14,14,-60,-61,14,-71,-72,-73,-74,-32,-2,-6,-59,-66,14,14,14,14,14,14,14,14,14,14,-62,-43,-44,-45,14,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,14,14,-31,14,14,-18,14,-37,-39,-55,14,-11,-13,-14,14,14,14,-56,-19,-38,-40,-20,14,-41,]),'WHILE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[15,15,-3,-4,-5,15,-7,-8,-9,-59,15,15,15,15,15,15,-60,-61,15,-71,-72,-73,-74,-32,-2,-6,-59,-66,15,15,15,15,15,15,15,15,15,15,-62,-43,-44,-45,15,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,15,15,-31,15,15,-18,15,-37,-39,-55,15,-11,-13,-14,15,15,15,-56,-19,-38,-40,-20,15,-41,]),'LET':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[16,16,-3,-4,-5,16,-7,-8,-9,-59,16,16,16,16,16,16,-60,-61,16,-71,-72,-73,-74,-32,-2,-6,-59,-66,16,16,16,16,16,16,16,16,16,16,-62,-43,-44,-45,16,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,16,16,-31,16,16,-18,16,-37,-39,-55,16,-11,-13,-14,16,16,16,-56,-19,-38,-40,-20,16,-41,]),'NOT':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[17,17,-3,-4,-5,17,-7,-8,-9,-59,17,17,17,17,17,17,-60,-61,17,-71,-72,-73,-74,-32,-2,-6,-59,-66,17,17,17,17,17,17,17,17,17,17,-62,-43,-44,-45,17,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,17,17,-31,17,17,-18,17,-37,-39,-55,17,-11,-13,-14,17,17,17,-56,-19,-38,-40,-20,17,-41,]),'MINUS':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,52,53,55,56,57,58,59,61,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,93,94,95,99,100,101,105,106,108,109,110,111,112,113,118,122,123,124,125,126,127,129,130,131,132,133,134,],[18,18,-3,-4,-5,18,40,-8,-9,-59,18,18,18,18,18,18,-60,-61,18,-71,-72,-73,-74,-32,-2,-6,40,-59,-66,18,18,18,18,18,18,18,18,18,18,-62,40,40,40,40,-44,-45,18,-58,40,-10,-65,40,40,-48,-49,-50,-51,-52,40,40,40,-63,-64,18,18,40,-31,18,18,-18,18,40,40,-55,18,40,-11,-13,-14,40,18,18,18,40,-56,-19,40,40,40,-20,18,40,]),'ISNULL':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[19,19,-3,-4,-5,19,-7,-8,-9,-59,19,19,19,19,19,19,-60,-61,19,-71,-72,-73,-74,-32,-2,-6,-59,-66,19,19,19,19,19,19,19,19,19,19,-62,-43,-44,-45,19,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,19,19,-31,19,19,-18,19,-37,-39,-55,19,-11,-13,-14,19,19,19,-56,-19,-38,-40,-20,19,-41,]),'NEW':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[21,21,-3,-4,-5,21,-7,-8,-9,-59,21,21,21,21,21,21,-60,-61,21,-71,-72,-73,-74,-32,-2,-6,-59,-66,21,21,21,21,21,21,21,21,21,21,-62,-43,-44,-45,21,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,21,21,-31,21,21,-18,21,-37,-39,-55,21,-11,-13,-14,21,21,21,-56,-19,-38,-40,-20,21,-41,]),'SELF':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[22,22,-3,-4,-5,22,-7,-8,-9,-59,22,22,22,22,22,22,-60,-61,22,-71,-72,-73,-74,-32,-2,-6,-59,-66,22,22,22,22,22,22,22,22,22,22,-62,-43,-44,-45,22,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,22,22,-31,22,22,-18,22,-37,-39,-55,22,-11,-13,-14,22,22,22,-56,-19,-38,-40,-20,22,-41,]),'LPAR':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,17,18,19,20,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,75,76,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,116,122,123,124,126,127,129,130,132,133,134,],[13,13,-3,-4,-5,13,-7,-8,-9,-21,49,13,13,13,13,13,13,58,-60,-61,13,-71,-72,-73,-74,-32,-2,-6,-57,-66,13,13,13,13,13,13,13,13,13,13,-62,-43,-44,-45,13,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,99,-57,-42,-63,-64,13,13,-31,13,13,-18,13,-37,-39,-55,13,-11,-13,-14,-21,13,13,13,-56,-19,-38,-40,-20,13,-41,]),'error':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,51,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,96,98,99,100,101,105,106,108,109,110,111,112,113,114,115,122,123,124,126,127,129,130,132,133,134,],[7,7,-3,-4,-5,31,7,-7,-8,-9,-59,7,7,7,7,7,7,-60,-61,7,-71,-72,-73,-74,-32,-2,-6,-59,-66,7,7,7,7,7,7,7,7,7,7,-62,88,-43,-44,-45,7,-58,96,-34,-10,-17,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,7,7,-31,7,-36,113,7,-18,7,-37,-39,-55,7,-33,-11,-13,-14,-15,-16,7,7,7,-56,-19,-38,-40,-20,7,-41,]),'string_literal':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[25,25,-3,-4,-5,25,-7,-8,-9,-59,25,25,25,25,25,25,-60,-61,25,-71,-72,-73,-74,-32,-2,-6,-59,-66,25,25,25,25,25,25,25,25,25,25,-62,-43,-44,-45,25,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,25,25,-31,25,25,-18,25,-37,-39,-55,25,-11,-13,-14,25,25,25,-56,-19,-38,-40,-20,25,-41,]),'INTEGER_LITERAL':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[26,26,-3,-4,-5,26,-7,-8,-9,-59,26,26,26,26,26,26,-60,-61,26,-71,-72,-73,-74,-32,-2,-6,-59,-66,26,26,26,26,26,26,26,26,26,26,-62,-43,-44,-45,26,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,26,26,-31,26,26,-18,26,-37,-39,-55,26,-11,-13,-14,26,26,26,-56,-19,-38,-40,-20,26,-41,]),'TRUE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[27,27,-3,-4,-5,27,-7,-8,-9,-59,27,27,27,27,27,27,-60,-61,27,-71,-72,-73,-74,-32,-2,-6,-59,-66,27,27,27,27,27,27,27,27,27,27,-62,-43,-44,-45,27,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,27,27,-31,27,27,-18,27,-37,-39,-55,27,-11,-13,-14,27,27,27,-56,-19,-38,-40,-20,27,-41,]),'FALSE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,89,90,94,95,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,129,130,132,133,134,],[28,28,-3,-4,-5,28,-7,-8,-9,-59,28,28,28,28,28,28,-60,-61,28,-71,-72,-73,-74,-32,-2,-6,-59,-66,28,28,28,28,28,28,28,28,28,28,-62,-43,-44,-45,28,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,28,28,-31,28,28,-18,28,-37,-39,-55,28,-11,-13,-14,28,28,28,-56,-19,-38,-40,-20,28,-41,]),'LBRACE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,48,50,55,56,57,58,59,62,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,87,88,89,90,94,95,97,99,100,101,105,106,108,109,111,112,113,122,123,124,126,127,128,129,130,132,133,134,],[29,29,-3,-4,-5,29,-7,-8,-9,-59,29,29,29,29,29,29,-60,-61,29,-71,-72,-73,-74,-32,-2,-6,64,-12,-59,-66,29,29,29,29,29,29,29,29,29,29,-62,-43,-44,-45,29,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-22,-23,-24,-25,-26,-42,-63,-64,29,29,-31,29,64,29,-18,29,-37,-39,-55,29,-11,-13,-14,29,29,29,-56,-19,29,-38,-40,-20,29,-41,]),'$end':([1,2,3,4,5,7,8,9,10,11,22,23,25,26,27,28,30,31,35,36,50,55,56,57,59,62,65,66,67,68,69,70,71,72,73,74,83,87,88,94,100,105,106,108,111,112,113,126,127,129,130,132,134,],[0,-1,-3,-4,-5,-67,-7,-8,-9,-59,-60,-61,-71,-72,-73,-74,-2,-6,-59,-66,-62,-43,-44,-45,-58,-10,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,-31,-18,-37,-39,-55,-11,-13,-14,-56,-19,-38,-40,-20,-41,]),'EQUAL':([7,8,10,11,22,23,25,26,27,28,34,35,36,50,51,52,53,55,56,57,59,61,65,66,67,68,69,70,71,72,73,74,83,87,88,93,94,105,106,108,110,118,125,126,129,130,131,134,],[-67,37,-66,-59,-60,-61,-71,-72,-73,-74,37,-59,-66,-62,37,37,37,37,-44,-45,-58,37,-65,None,37,-48,-49,-50,-51,-52,None,None,37,-63,-64,37,-31,37,37,-55,37,37,37,-56,37,37,37,37,]),'AND':([7,8,10,11,22,23,25,26,27,28,34,35,36,50,51,52,53,55,56,57,59,61,65,66,67,68,69,70,71,72,73,74,83,87,88,93,94,105,106,108,110,118,125,126,129,130,131,134,],[-67,38,-66,-59,-60,-61,-71,-72,-73,-74,38,-59,-66,-62,38,38,38,-43,-44,-45,-58,38,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,38,-63,-64,38,-31,38,38,-55,38,38,38,-56,38,38,38,38,]),'PLUS':([7,8,10,11,22,23,25,26,27,28,34,35,36,50,51,52,53,55,56,57,59,61,65,66,67,68,69,70,71,72,73,74,83,87,88,93,94,105,106,108,110,118,125,126,129,130,131,134,],[-67,39,-66,-59,-60,-61,-71,-72,-73,-74,39,-59,-66,-62,39,39,39,39,-44,-45,-58,39,-65,39,39,-48,-49,-50,-51,-52,39,39,39,-63,-64,39,-31,39,39,-55,39,39,39,-56,39,39,39,39,]),'TIMES':([7,8,10,11,22,23,25,26,27,28,34,35,36,50,51,52,53,55,56,57,59,61,65,66,67,68,69,70,71,72,73,74,83,87,88,93,94,105,106,108,110,118,125,126,129,130,131,134,],[-67,41,-66,-59,-60,-61,-71,-72,-73,-74,41,-59,-66,-62,41,41,41,41,-44,-45,-58,41,-65,41,41,41,41,-50,-51,-52,41,41,41,-63,-64,41,-31,41,41,-55,41,41,41,-56,41,41,41,41,]),'DIV':([7,8,10,11,22,23,25,26,27,28,34,35,36,50,51,52,53,55,56,57,59,61,65,66,67,68,69,70,71,72,73,74,83,87,88,93,94,105,106,108,110,118,125,126,129,130,131,134,],[-67,42,-66,-59,-60,-61,-71,-72,-73,-74,42,-59,-66,-62,42,42,42,42,-44,-45,-58,42,-65,42,42,42,42,-50,-51,-52,42,42,42,-63,-64,42,-31,42,42,-55,42,42,42,-56,42,42,42,42,]),'POW':([7,8,10,11,22,23,25,26,27,28,34,35,36,50,51,52,53,55,56,57,59,61,65,66,67,68,69,70,71,72,73,74,83,87,88,93,94,105,106,108,110,118,125,126,129,130,131,134,],[-67,43,-66,-59,-60,-61,-71,-72,-73,-74,43,-59,-66,-62,43,43,43,43,43,43,-58,43,-65,43,43,43,43,43,43,43,43,43,43,-63,-64,43,-31,43,43,-55,43,43,43,-56,43,43,43,43,]),'LOWER_EQUAL':([7,8,10,11,22,23,25,26,27,28,34,35,36,50,51,52,53,55,56,57,59,61,65,66,67,68,69,70,71,72,73,74,83,87,88,93,94,105,106,108,110,118,125,126,129,130,131,134,],[-67,44,-66,-59,-60,-61,-71,-72,-73,-74,44,-59,-66,-62,44,44,44,44,-44,-45,-58,44,-65,None,44,-48,-49,-50,-51,-52,None,None,44,-63,-64,44,-31,44,44,-55,44,44,44,-56,44,44,44,44,]),'LOWER':([7,8,10,11,22,23,25,26,27,28,34,35,36,50,51,52,53,55,56,57,59,61,65,66,67,68,69,70,71,72,73,74,83,87,88,93,94,105,106,108,110,118,125,126,129,130,131,134,],[-67,45,-66,-59,-60,-61,-71,-72,-73,-74,45,-59,-66,-62,45,45,45,45,-44,-45,-58,45,-65,None,45,-48,-49,-50,-51,-52,None,None,45,-63,-64,45,-31,45,45,-55,45,45,45,-56,45,45,45,45,]),'DOT':([7,8,10,11,22,23,25,26,27,28,34,35,36,50,51,52,53,55,56,57,59,61,65,66,67,68,69,70,71,72,73,74,83,87,88,93,94,105,106,108,110,118,125,126,129,130,131,134,],[-67,46,-66,-59,-60,-61,-71,-72,-73,-74,46,-59,-66,-62,46,46,46,46,46,46,-58,46,-65,46,46,46,46,46,46,46,46,46,46,-63,-64,46,-31,46,46,-55,46,46,46,-56,46,46,46,46,]),'RPAR':([7,13,22,23,25,26,27,28,34,35,36,49,50,51,55,56,57,58,59,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,87,88,92,93,94,99,105,106,108,117,120,121,125,126,129,130,134,],[-67,50,-60,-61,-71,-72,-73,-74,65,-59,-66,-29,-62,87,-43,-44,-45,-70,-58,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-22,-23,-24,-25,-26,-42,102,-27,-63,-64,108,-69,-31,-70,-37,-39,-55,126,-28,-30,-68,-56,-38,-40,-41,]),'THEN':([7,22,23,25,26,27,28,35,36,50,52,55,56,57,59,65,66,67,68,69,70,71,72,73,74,83,87,88,94,105,106,108,126,129,130,134,],[-67,-60,-61,-71,-72,-73,-74,-59,-66,-62,89,-43,-44,-45,-58,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,-31,-37,-39,-55,-56,-38,-40,-41,]),'DO':([7,22,23,25,26,27,28,35,36,50,53,55,56,57,59,65,66,67,68,69,70,71,72,73,74,83,87,88,94,105,106,108,126,129,130,134,],[-67,-60,-61,-71,-72,-73,-74,-59,-66,-62,90,-43,-44,-45,-58,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,-31,-37,-39,-55,-56,-38,-40,-41,]),'RBRACE':([7,22,23,24,25,26,27,28,29,35,36,50,55,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,83,87,88,94,96,98,100,105,106,108,110,114,115,126,127,129,130,132,134,],[-67,-60,-61,-35,-71,-72,-73,-74,-32,-59,-66,-62,-43,-44,-45,-58,94,-34,-17,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,-31,-36,112,-18,-37,-39,-55,-33,-15,-16,-56,-19,-38,-40,-20,-41,]),'SEMICOLON':([7,22,23,24,25,26,27,28,29,35,36,50,55,56,57,59,60,61,65,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,87,88,94,96,105,106,108,110,118,126,129,130,134,],[-67,-60,-61,-35,-71,-72,-73,-74,-32,-59,-66,-62,-43,-44,-45,-58,95,-34,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,100,-22,-23,-24,-25,-26,-42,-63,-64,-31,-36,-37,-39,-55,-33,127,-56,-38,-40,-41,]),'COMMA':([7,22,23,25,26,27,28,35,36,49,50,55,56,57,58,59,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,87,88,92,93,94,99,105,106,108,117,120,121,125,126,129,130,134,],[-67,-60,-61,-71,-72,-73,-74,-59,-66,-29,-62,-43,-44,-45,-70,-58,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-22,-23,-24,-25,-26,-42,103,-27,-63,-64,109,-69,-31,-70,-37,-39,-55,109,-28,-30,-68,-56,-38,-40,-41,]),'ELSE':([7,22,23,25,26,27,28,35,36,50,55,56,57,59,65,66,67,68,69,70,71,72,73,74,83,87,88,94,105,106,108,126,129,130,134,],[-67,-60,-61,-71,-72,-73,-74,-59,-66,-62,-43,-44,-45,-58,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-42,-63,-64,-31,122,-39,-55,-56,-38,-40,-41,]),'IN':([7,22,23,25,26,27,28,35,36,50,55,56,57,59,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,87,88,94,105,106,107,108,126,129,130,131,134,],[-67,-60,-61,-71,-72,-73,-74,-59,-66,-62,-43,-44,-45,-58,-65,-46,-47,-48,-49,-50,-51,-52,-53,-54,-22,-23,-24,-25,-26,-42,-63,-64,-31,-37,-39,123,-55,-56,-38,-40,133,-41,]),'COLON':([11,54,86,102,116,],[47,91,104,119,47,]),'ASSIGN':([11,35,77,78,79,80,81,82,107,],[48,48,101,-22,-23,-24,-25,-26,124,]),'EXTENDS':([32,33,],[63,-12,]),'INT32':([47,91,104,119,],[79,79,79,79,]),'BOOL':([47,91,104,119,],[80,80,80,80,]),'STRING':([47,91,104,119,],[81,81,81,81,]),'UNIT':([47,91,104,119,],[82,82,82,82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'program':([0,],[2,]),'class':([0,2,],[3,30,]),'field':([0,2,98,],[4,4,114,]),'method':([0,2,98,],[5,5,115,]),'expression':([0,2,7,13,14,15,17,18,19,24,37,38,39,40,41,42,43,44,45,48,58,89,90,95,99,101,109,122,123,124,133,],[8,8,34,51,52,53,55,56,57,61,66,67,68,69,70,71,72,73,74,83,93,105,106,110,93,118,125,129,130,131,134,]),'block':([0,2,7,13,14,15,17,18,19,24,37,38,39,40,41,42,43,44,45,48,58,89,90,95,99,101,109,122,123,124,128,133,],[10,10,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,132,36,]),'method_identifier':([0,2,98,],[12,12,12,]),'call_identifier':([0,2,7,13,14,15,17,18,19,24,37,38,39,40,41,42,43,44,45,46,48,58,89,90,95,99,101,109,122,123,124,133,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,75,20,20,20,20,20,20,20,20,20,20,20,20,]),'literal':([0,2,7,13,14,15,17,18,19,24,37,38,39,40,41,42,43,44,45,48,58,89,90,95,99,101,109,122,123,124,133,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'block_lbrace':([0,2,7,13,14,15,17,18,19,24,37,38,39,40,41,42,43,44,45,48,58,89,90,95,99,101,109,122,123,124,128,133,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'new_class_scope':([6,],[32,]),'inblock':([24,],[60,]),'class-body':([32,97,],[62,111,]),'type':([47,91,104,119,],[77,107,121,128,]),'formals':([49,],[84,]),'formal':([49,103,],[85,120,]),'args':([58,99,],[92,117,]),'class-body-in':([64,],[98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> program','init',1,'p_init','parserFile.py',93),
  ('program -> program class','program',2,'p_program','parserFile.py',98),
  ('program -> class','program',1,'p_program','parserFile.py',99),
  ('class -> field','class',1,'p_field_method_error','parserFile.py',103),
  ('class -> method','class',1,'p_field_method_error','parserFile.py',104),
  ('class -> CLASS error','class',2,'p_class_error','parserFile.py',111),
  ('class -> expression','class',1,'p_general_class_error','parserFile.py',116),
  ('class -> TYPE_IDENTIFIER','class',1,'p_general_class_error','parserFile.py',117),
  ('class -> block','class',1,'p_general_class_error','parserFile.py',118),
  ('class -> CLASS new_class_scope class-body','class',3,'p_class','parserFile.py',125),
  ('class -> CLASS new_class_scope EXTENDS TYPE_IDENTIFIER class-body','class',5,'p_class','parserFile.py',126),
  ('new_class_scope -> TYPE_IDENTIFIER','new_class_scope',1,'p_new_class_scope','parserFile.py',138),
  ('class-body -> LBRACE class-body-in RBRACE','class-body',3,'p_class_body','parserFile.py',143),
  ('class-body -> LBRACE class-body-in error','class-body',3,'p_class_braces_error','parserFile.py',147),
  ('class-body-in -> class-body-in field','class-body-in',2,'p_class_body_field','parserFile.py',152),
  ('class-body-in -> class-body-in method','class-body-in',2,'p_class_body_method','parserFile.py',157),
  ('class-body-in -> <empty>','class-body-in',0,'p_class_body_empty','parserFile.py',162),
  ('field -> OBJECT_IDENTIFIER COLON type SEMICOLON','field',4,'p_field','parserFile.py',166),
  ('field -> OBJECT_IDENTIFIER COLON type ASSIGN expression SEMICOLON','field',6,'p_field','parserFile.py',167),
  ('method -> method_identifier LPAR formals RPAR COLON type block','method',7,'p_method','parserFile.py',176),
  ('method_identifier -> OBJECT_IDENTIFIER','method_identifier',1,'p_method_identifier','parserFile.py',182),
  ('type -> TYPE_IDENTIFIER','type',1,'p_type','parserFile.py',187),
  ('type -> INT32','type',1,'p_type','parserFile.py',188),
  ('type -> BOOL','type',1,'p_type','parserFile.py',189),
  ('type -> STRING','type',1,'p_type','parserFile.py',190),
  ('type -> UNIT','type',1,'p_type','parserFile.py',191),
  ('formals -> formal','formals',1,'p_formals','parserFile.py',195),
  ('formals -> formals COMMA formal','formals',3,'p_formals','parserFile.py',196),
  ('formals -> <empty>','formals',0,'p_formals','parserFile.py',197),
  ('formal -> OBJECT_IDENTIFIER COLON type','formal',3,'p_formal','parserFile.py',208),
  ('block -> block_lbrace inblock RBRACE','block',3,'p_block','parserFile.py',213),
  ('block_lbrace -> LBRACE','block_lbrace',1,'p_block_lbrace','parserFile.py',222),
  ('inblock -> inblock SEMICOLON expression','inblock',3,'p_block_inside','parserFile.py',227),
  ('inblock -> expression','inblock',1,'p_block_inside','parserFile.py',228),
  ('inblock -> <empty>','inblock',0,'p_block_inside','parserFile.py',229),
  ('inblock -> inblock error','inblock',2,'p_block_error','parserFile.py',240),
  ('expression -> IF expression THEN expression','expression',4,'p_if','parserFile.py',245),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_if','parserFile.py',246),
  ('expression -> WHILE expression DO expression','expression',4,'p_while','parserFile.py',260),
  ('expression -> LET OBJECT_IDENTIFIER COLON type IN expression','expression',6,'p_let','parserFile.py',265),
  ('expression -> LET OBJECT_IDENTIFIER COLON type ASSIGN expression IN expression','expression',8,'p_let','parserFile.py',266),
  ('expression -> OBJECT_IDENTIFIER ASSIGN expression','expression',3,'p_assign','parserFile.py',274),
  ('expression -> NOT expression','expression',2,'p_unary_not','parserFile.py',279),
  ('expression -> MINUS expression','expression',2,'p_unary_minus','parserFile.py',284),
  ('expression -> ISNULL expression','expression',2,'p_unary_isnull','parserFile.py',289),
  ('expression -> expression EQUAL expression','expression',3,'p_binary_equal','parserFile.py',294),
  ('expression -> expression AND expression','expression',3,'p_binary_and','parserFile.py',300),
  ('expression -> expression PLUS expression','expression',3,'p_binary_int_operators','parserFile.py',305),
  ('expression -> expression MINUS expression','expression',3,'p_binary_int_operators','parserFile.py',306),
  ('expression -> expression TIMES expression','expression',3,'p_binary_int_operators','parserFile.py',307),
  ('expression -> expression DIV expression','expression',3,'p_binary_int_operators','parserFile.py',308),
  ('expression -> expression POW expression','expression',3,'p_binary_int_operators','parserFile.py',309),
  ('expression -> expression LOWER_EQUAL expression','expression',3,'p_binary_comp_operators','parserFile.py',314),
  ('expression -> expression LOWER expression','expression',3,'p_binary_comp_operators','parserFile.py',315),
  ('expression -> call_identifier LPAR args RPAR','expression',4,'p_object_call','parserFile.py',321),
  ('expression -> expression DOT call_identifier LPAR args RPAR','expression',6,'p_object_call','parserFile.py',322),
  ('call_identifier -> OBJECT_IDENTIFIER','call_identifier',1,'p_call_identifier','parserFile.py',331),
  ('expression -> NEW TYPE_IDENTIFIER','expression',2,'p_new_type','parserFile.py',336),
  ('expression -> OBJECT_IDENTIFIER','expression',1,'p_expression_object','parserFile.py',341),
  ('expression -> SELF','expression',1,'p_expression_self','parserFile.py',346),
  ('expression -> literal','expression',1,'p_expression_literal','parserFile.py',351),
  ('expression -> LPAR RPAR','expression',2,'p_par_alone','parserFile.py',355),
  ('expression -> LPAR expression RPAR','expression',3,'p_par_expression','parserFile.py',360),
  ('expression -> LPAR expression error','expression',3,'p_par_error','parserFile.py',364),
  ('expression -> error expression RPAR','expression',3,'p_par_error','parserFile.py',365),
  ('expression -> block','expression',1,'p_expression_block','parserFile.py',370),
  ('expression -> error','expression',1,'p_expression_error','parserFile.py',374),
  ('args -> args COMMA expression','args',3,'p_args','parserFile.py',379),
  ('args -> expression','args',1,'p_args','parserFile.py',380),
  ('args -> <empty>','args',0,'p_args','parserFile.py',381),
  ('literal -> string_literal','literal',1,'p_string_literal','parserFile.py',392),
  ('literal -> INTEGER_LITERAL','literal',1,'p_integer_literal','parserFile.py',397),
  ('literal -> TRUE','literal',1,'p_boolean_literal','parserFile.py',402),
  ('literal -> FALSE','literal',1,'p_boolean_literal','parserFile.py',403),
]
