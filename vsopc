#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Feb  9 17:53:55 2021

@author: Guilherme Madureira & Julien Carion
"""

import argparse
import sys
from lexer import VsopLexer
from parserFile import VsopParser

def main():
    argParser = argparse.ArgumentParser()
    argParser.add_argument("-lex", "-lex", dest='source_file', help="Path to the VSOP source code", required=True)
    args = argParser.parse_args()

    text_file = open(args.source_file, "r")
    text_file_name = text_file.name
    string_text = text_file.read()
    text_file.close()

    if len(string_text) == 0 :
        sys.stdout.write("Source code file is empty")

    keywords = {
        'and': 'and',
        'bool':'bool',
        'class':'class',
        'do':'do',
        'else':'else',
        'extends':'extends',
        'false':'false',
        'if':'if',
        'in':'in',
        'int32':'int32',
        'isnull':'isnull',
        'let':'let',
        'new':'new',
        'not':'not',
        'self':'self',
        'string':'string',
        'then':'then',
        'true':'unit',
        'while':'while'
        }
    
    # Lexer initialisation
    vsopLexer = VsopLexer(text_file_name, string_text)
    lexer = vsopLexer.lexer
    lexer.input(string_text)

    # Parser initialisation
    parser = VsopParser(lexer)
    


    for token in lexer:
        if token.type == "error":
            sys.exit(1)

        token.type = token.type.lower().replace("_","-")
        colno = vsopLexer.find_column(string_text,token)
        if(token.type == "string-literal"):
            colno -= 1

        if token.value in keywords:
            token.type = token.value # Replace TOKEN_CLASS by keyword

        if any(token.type == TOKEN_CLASS for TOKEN_CLASS in ('string-literal', 'object-identifier', 'type-identifier', 'integer-literal')):
            sys.stdout.write("{0},{1},{2},{3}\n".format(token.lineno, colno, token.type, token.value))

        else:
            sys.stdout.write("{0},{1},{2}\n".format(token.lineno, colno, token.type))

if __name__ == "__main__":
    main()
