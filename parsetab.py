
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initrightASSIGNleftANDrightNOTnonassocLOWEREQUALLOWER_EQUALleftPLUSMINUSleftTIMESDIVrightISNULLUMINUSrightPOWleftDOTAND ASSIGN BOOL CLASS COLON COMMA DIV DO DOT ELSE EQUAL EXTENDS FALSE IF IN INT32 INTEGER_LITERAL ISNULL LBRACE LET LOWER LOWER_EQUAL LPAR MINUS NEW NOT OBJECT_IDENTIFIER PLUS POW RBRACE RPAR SELF SEMICOLON STRING THEN TIMES TRUE TYPE_IDENTIFIER UNIT WHILE string_literalinit : programprogram : program class\n                    | classclass : field\n                | methodclass : CLASS errorclass : expression\n                | TYPE_IDENTIFIER\n                | blockclass : CLASS TYPE_IDENTIFIER class-body\n                | CLASS TYPE_IDENTIFIER EXTENDS TYPE_IDENTIFIER class-bodyclass-body : LBRACE class-body-in RBRACEclass-body : LBRACE class-body-in errorclass-body-in : class-body-in fieldclass-body-in : class-body-in methodclass-body-in : field : OBJECT_IDENTIFIER COLON type SEMICOLON\n                | OBJECT_IDENTIFIER COLON type ASSIGN expression SEMICOLONmethod : OBJECT_IDENTIFIER LPAR formals RPAR COLON type blocktype : TYPE_IDENTIFIER\n                | INT32\n                | BOOL\n                | STRING\n                | UNIT formals : formal\n                | formals COMMA formal\n                | formal : OBJECT_IDENTIFIER COLON typeblock : LBRACE inblock RBRACEinblock : inblock SEMICOLON expression\n                | expression\n                |inblock : inblock error expression : IF expression THEN expression\n                    | IF expression THEN expression ELSE expressionexpression : WHILE expression DO expressionexpression : LET OBJECT_IDENTIFIER COLON type IN expression\n                    | LET OBJECT_IDENTIFIER COLON type ASSIGN expression IN expressionexpression : OBJECT_IDENTIFIER ASSIGN expressionexpression : NOT expression\n                    | MINUS expression %prec UMINUS\n                    | ISNULL expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIV expression\n                  | expression EQUAL expression\n                  | expression LOWER_EQUAL expression\n                  | expression LOWER expression\n                  | expression POW expression\n                  | expression AND expressionexpression : OBJECT_IDENTIFIER LPAR args RPAR\n                    | expression DOT OBJECT_IDENTIFIER LPAR args RPARexpression : NEW TYPE_IDENTIFIERexpression : OBJECT_IDENTIFIERexpression : SELFexpression : literalexpression : LPAR RPARexpression : LPAR expression RPARexpression : LPAR expression error\n                    | error expression RPARexpression : blockexpression : error\n                    | IF expression THEN expression SEMICOLON errorargs : args COMMA expression\n                | expression\n                |literal : INTEGER_LITERAL\n                | string_literal\n                | boolean-literalboolean-literal : TRUE \n                        | FALSE'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,7,8,9,10,11,20,21,23,24,25,26,27,28,29,32,33,47,52,53,54,55,58,61,63,64,65,66,67,68,69,70,71,79,85,86,90,96,101,103,104,107,108,109,125,126,128,129,130,132,134,],[6,6,-3,-4,-5,-63,-7,-8,-9,-55,-56,-57,-68,-69,-70,-71,-72,-2,-6,-55,-62,-58,-40,-41,-42,-54,-10,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,-29,-17,-52,-34,-36,-11,-12,-13,-53,-18,-35,-64,-37,-19,-38,]),'TYPE_IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,19,20,21,23,24,25,26,27,28,29,32,33,44,47,52,53,54,55,58,59,61,63,64,65,66,67,68,69,70,71,79,85,86,89,90,96,98,101,103,104,107,108,109,116,125,126,128,129,130,132,134,],[9,9,-3,-4,-5,30,-63,-7,-8,-9,-55,55,-56,-57,-68,-69,-70,-71,-72,-2,-6,-55,-62,74,-58,-40,-41,-42,-54,-10,93,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,74,-29,-17,74,-52,-34,-36,-11,-12,-13,74,-53,-18,-35,-64,-37,-19,-38,]),'OBJECT_IDENTIFIER':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,52,53,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,94,95,96,97,100,101,102,103,104,107,108,109,110,111,120,122,123,124,125,126,128,129,130,132,133,134,],[11,11,-3,-4,-5,32,-7,-8,-9,-55,32,32,32,51,32,32,32,-56,-57,32,-68,-69,-70,-71,-72,-2,-6,-55,-62,32,32,32,32,32,32,32,32,32,72,32,80,-58,-40,-41,-42,-54,-10,-16,-61,32,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,32,32,-29,32,112,32,-17,32,118,-52,32,-34,-36,-11,-12,-13,-14,-15,32,32,32,118,-53,-18,-35,-64,-37,-19,32,-38,]),'IF':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[13,13,-3,-4,-5,13,-7,-8,-9,-55,13,13,13,13,13,13,-56,-57,13,-68,-69,-70,-71,-72,-2,-6,-55,-62,13,13,13,13,13,13,13,13,13,13,13,-58,-40,-41,-42,-54,-10,-61,13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,13,13,-29,13,13,-17,13,-52,13,-34,-36,-11,-12,-13,13,13,13,-53,-18,-35,-64,-37,-19,13,-38,]),'WHILE':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[14,14,-3,-4,-5,14,-7,-8,-9,-55,14,14,14,14,14,14,-56,-57,14,-68,-69,-70,-71,-72,-2,-6,-55,-62,14,14,14,14,14,14,14,14,14,14,14,-58,-40,-41,-42,-54,-10,-61,14,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,14,14,-29,14,14,-17,14,-52,14,-34,-36,-11,-12,-13,14,14,14,-53,-18,-35,-64,-37,-19,14,-38,]),'LET':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[15,15,-3,-4,-5,15,-7,-8,-9,-55,15,15,15,15,15,15,-56,-57,15,-68,-69,-70,-71,-72,-2,-6,-55,-62,15,15,15,15,15,15,15,15,15,15,15,-58,-40,-41,-42,-54,-10,-61,15,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,15,15,-29,15,15,-17,15,-52,15,-34,-36,-11,-12,-13,15,15,15,-53,-18,-35,-64,-37,-19,15,-38,]),'NOT':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[16,16,-3,-4,-5,16,-7,-8,-9,-55,16,16,16,16,16,16,-56,-57,16,-68,-69,-70,-71,-72,-2,-6,-55,-62,16,16,16,16,16,16,16,16,16,16,16,-58,-40,-41,-42,-54,-10,-61,16,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,16,16,-29,16,16,-17,16,-52,16,-34,-36,-11,-12,-13,16,16,16,-53,-18,-35,-64,-37,-19,16,-38,]),'MINUS':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,52,53,54,55,57,58,61,62,63,64,65,66,67,68,69,70,71,79,80,84,85,86,87,88,90,91,95,96,97,101,102,103,104,106,107,108,109,114,119,120,122,123,125,126,128,129,130,131,132,133,134,],[17,17,-3,-4,-5,17,35,-8,-9,-55,17,17,17,17,17,17,-56,-57,17,-68,-69,-70,-71,-72,-2,-6,35,-55,-62,17,17,17,17,17,17,17,17,17,17,17,-58,35,35,35,35,-41,-42,-54,35,-10,-61,17,-43,-44,-45,-46,35,35,35,-50,35,35,-55,35,-59,-60,17,17,-29,17,17,-17,17,-52,17,35,35,35,-11,-12,-13,35,35,17,17,17,-53,-18,35,-64,35,35,-19,17,35,]),'ISNULL':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[18,18,-3,-4,-5,18,-7,-8,-9,-55,18,18,18,18,18,18,-56,-57,18,-68,-69,-70,-71,-72,-2,-6,-55,-62,18,18,18,18,18,18,18,18,18,18,18,-58,-40,-41,-42,-54,-10,-61,18,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,18,18,-29,18,18,-17,18,-52,18,-34,-36,-11,-12,-13,18,18,18,-53,-18,-35,-64,-37,-19,18,-38,]),'NEW':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[19,19,-3,-4,-5,19,-7,-8,-9,-55,19,19,19,19,19,19,-56,-57,19,-68,-69,-70,-71,-72,-2,-6,-55,-62,19,19,19,19,19,19,19,19,19,19,19,-58,-40,-41,-42,-54,-10,-61,19,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,19,19,-29,19,19,-17,19,-52,19,-34,-36,-11,-12,-13,19,19,19,-53,-18,-35,-64,-37,-19,19,-38,]),'SELF':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[20,20,-3,-4,-5,20,-7,-8,-9,-55,20,20,20,20,20,20,-56,-57,20,-68,-69,-70,-71,-72,-2,-6,-55,-62,20,20,20,20,20,20,20,20,20,20,20,-58,-40,-41,-42,-54,-10,-61,20,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,20,20,-29,20,20,-17,20,-52,20,-34,-36,-11,-12,-13,20,20,20,-53,-18,-35,-64,-37,-19,20,-38,]),'LPAR':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,72,79,80,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,112,120,122,123,125,126,128,129,130,132,133,134,],[12,12,-3,-4,-5,12,-7,-8,-9,46,12,12,12,12,12,12,-56,-57,12,-68,-69,-70,-71,-72,-2,-6,62,-62,12,12,12,12,12,12,12,12,12,12,12,-58,-40,-41,-42,-54,-10,-61,12,-43,-44,-45,-46,-47,-48,-49,-50,-51,95,-39,62,-59,-60,12,12,-29,12,12,-17,12,-52,12,-34,-36,-11,-12,-13,124,12,12,12,-53,-18,-35,-64,-37,-19,12,-38,]),'error':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,92,94,95,96,97,101,102,103,104,106,107,108,109,110,111,120,121,122,123,125,126,128,129,130,132,133,134,],[7,7,-3,-4,-5,29,7,-7,-8,-9,-55,7,7,7,7,7,7,-56,-57,7,-68,-69,-70,-71,-72,-2,-6,-55,-62,7,7,7,7,7,7,7,7,7,7,7,-58,86,-40,-41,-42,-54,92,-31,-10,-16,-61,7,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,7,7,-29,7,-33,109,7,-17,7,-52,7,-34,-36,-30,-11,-12,-13,-14,-15,7,129,7,7,-53,-18,-35,-64,-37,-19,7,-38,]),'LBRACE':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,85,86,87,88,90,91,93,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,127,128,129,130,132,133,134,],[22,22,-3,-4,-5,22,-7,-8,-9,-55,22,22,22,22,22,22,-56,-57,22,-68,-69,-70,-71,-72,-2,-6,60,-55,-62,22,22,22,22,22,22,22,22,22,22,22,-58,-40,-41,-42,-54,-10,-61,22,-43,-44,-45,-46,-47,-48,-49,-50,-51,-20,-21,-22,-23,-24,-39,-59,-60,22,22,-29,22,60,22,-17,22,-52,22,-34,-36,-11,-12,-13,22,22,22,-53,-18,22,-35,-64,-37,-19,22,-38,]),'INTEGER_LITERAL':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[23,23,-3,-4,-5,23,-7,-8,-9,-55,23,23,23,23,23,23,-56,-57,23,-68,-69,-70,-71,-72,-2,-6,-55,-62,23,23,23,23,23,23,23,23,23,23,23,-58,-40,-41,-42,-54,-10,-61,23,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,23,23,-29,23,23,-17,23,-52,23,-34,-36,-11,-12,-13,23,23,23,-53,-18,-35,-64,-37,-19,23,-38,]),'string_literal':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[24,24,-3,-4,-5,24,-7,-8,-9,-55,24,24,24,24,24,24,-56,-57,24,-68,-69,-70,-71,-72,-2,-6,-55,-62,24,24,24,24,24,24,24,24,24,24,24,-58,-40,-41,-42,-54,-10,-61,24,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,24,24,-29,24,24,-17,24,-52,24,-34,-36,-11,-12,-13,24,24,24,-53,-18,-35,-64,-37,-19,24,-38,]),'TRUE':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[26,26,-3,-4,-5,26,-7,-8,-9,-55,26,26,26,26,26,26,-56,-57,26,-68,-69,-70,-71,-72,-2,-6,-55,-62,26,26,26,26,26,26,26,26,26,26,26,-58,-40,-41,-42,-54,-10,-61,26,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,26,26,-29,26,26,-17,26,-52,26,-34,-36,-11,-12,-13,26,26,26,-53,-18,-35,-64,-37,-19,26,-38,]),'FALSE':([0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,45,46,47,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,79,85,86,87,88,90,91,95,96,97,101,102,103,104,107,108,109,120,122,123,125,126,128,129,130,132,133,134,],[27,27,-3,-4,-5,27,-7,-8,-9,-55,27,27,27,27,27,27,-56,-57,27,-68,-69,-70,-71,-72,-2,-6,-55,-62,27,27,27,27,27,27,27,27,27,27,27,-58,-40,-41,-42,-54,-10,-61,27,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,27,27,-29,27,27,-17,27,-52,27,-34,-36,-11,-12,-13,27,27,27,-53,-18,-35,-64,-37,-19,27,-38,]),'$end':([1,2,3,4,5,7,8,9,10,11,20,21,23,24,25,26,27,28,29,32,33,47,52,53,54,55,58,61,63,64,65,66,67,68,69,70,71,79,85,86,90,96,101,103,104,107,108,109,125,126,128,129,130,132,134,],[0,-1,-3,-4,-5,-63,-7,-8,-9,-55,-56,-57,-68,-69,-70,-71,-72,-2,-6,-55,-62,-58,-40,-41,-42,-54,-10,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,-29,-17,-52,-34,-36,-11,-12,-13,-53,-18,-35,-64,-37,-19,-38,]),'PLUS':([7,8,10,11,20,21,23,24,25,26,27,31,32,33,47,48,49,50,52,53,54,55,57,61,63,64,65,66,67,68,69,70,71,79,80,84,85,86,90,101,103,104,106,114,119,125,128,129,130,131,134,],[-63,34,-62,-55,-56,-57,-68,-69,-70,-71,-72,34,-55,-62,-58,34,34,34,34,-41,-42,-54,34,-61,-43,-44,-45,-46,34,34,34,-50,34,34,-55,34,-59,-60,-29,-52,34,34,34,34,34,-53,34,-64,34,34,34,]),'TIMES':([7,8,10,11,20,21,23,24,25,26,27,31,32,33,47,48,49,50,52,53,54,55,57,61,63,64,65,66,67,68,69,70,71,79,80,84,85,86,90,101,103,104,106,114,119,125,128,129,130,131,134,],[-63,36,-62,-55,-56,-57,-68,-69,-70,-71,-72,36,-55,-62,-58,36,36,36,36,-41,-42,-54,36,-61,36,36,-45,-46,36,36,36,-50,36,36,-55,36,-59,-60,-29,-52,36,36,36,36,36,-53,36,-64,36,36,36,]),'DIV':([7,8,10,11,20,21,23,24,25,26,27,31,32,33,47,48,49,50,52,53,54,55,57,61,63,64,65,66,67,68,69,70,71,79,80,84,85,86,90,101,103,104,106,114,119,125,128,129,130,131,134,],[-63,37,-62,-55,-56,-57,-68,-69,-70,-71,-72,37,-55,-62,-58,37,37,37,37,-41,-42,-54,37,-61,37,37,-45,-46,37,37,37,-50,37,37,-55,37,-59,-60,-29,-52,37,37,37,37,37,-53,37,-64,37,37,37,]),'EQUAL':([7,8,10,11,20,21,23,24,25,26,27,31,32,33,47,48,49,50,52,53,54,55,57,61,63,64,65,66,67,68,69,70,71,79,80,84,85,86,90,101,103,104,106,114,119,125,128,129,130,131,134,],[-63,38,-62,-55,-56,-57,-68,-69,-70,-71,-72,38,-55,-62,-58,38,38,38,38,-41,-42,-54,38,-61,-43,-44,-45,-46,None,None,None,-50,38,38,-55,38,-59,-60,-29,-52,38,38,38,38,38,-53,38,-64,38,38,38,]),'LOWER_EQUAL':([7,8,10,11,20,21,23,24,25,26,27,31,32,33,47,48,49,50,52,53,54,55,57,61,63,64,65,66,67,68,69,70,71,79,80,84,85,86,90,101,103,104,106,114,119,125,128,129,130,131,134,],[-63,39,-62,-55,-56,-57,-68,-69,-70,-71,-72,39,-55,-62,-58,39,39,39,39,-41,-42,-54,39,-61,-43,-44,-45,-46,None,None,None,-50,39,39,-55,39,-59,-60,-29,-52,39,39,39,39,39,-53,39,-64,39,39,39,]),'LOWER':([7,8,10,11,20,21,23,24,25,26,27,31,32,33,47,48,49,50,52,53,54,55,57,61,63,64,65,66,67,68,69,70,71,79,80,84,85,86,90,101,103,104,106,114,119,125,128,129,130,131,134,],[-63,40,-62,-55,-56,-57,-68,-69,-70,-71,-72,40,-55,-62,-58,40,40,40,40,-41,-42,-54,40,-61,-43,-44,-45,-46,None,None,None,-50,40,40,-55,40,-59,-60,-29,-52,40,40,40,40,40,-53,40,-64,40,40,40,]),'POW':([7,8,10,11,20,21,23,24,25,26,27,31,32,33,47,48,49,50,52,53,54,55,57,61,63,64,65,66,67,68,69,70,71,79,80,84,85,86,90,101,103,104,106,114,119,125,128,129,130,131,134,],[-63,41,-62,-55,-56,-57,-68,-69,-70,-71,-72,41,-55,-62,-58,41,41,41,41,41,41,-54,41,-61,41,41,41,41,41,41,41,41,41,41,-55,41,-59,-60,-29,-52,41,41,41,41,41,-53,41,-64,41,41,41,]),'AND':([7,8,10,11,20,21,23,24,25,26,27,31,32,33,47,48,49,50,52,53,54,55,57,61,63,64,65,66,67,68,69,70,71,79,80,84,85,86,90,101,103,104,106,114,119,125,128,129,130,131,134,],[-63,42,-62,-55,-56,-57,-68,-69,-70,-71,-72,42,-55,-62,-58,42,42,42,-40,-41,-42,-54,42,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,42,-55,42,-59,-60,-29,-52,42,42,42,42,42,-53,42,-64,42,42,42,]),'DOT':([7,8,10,11,20,21,23,24,25,26,27,31,32,33,47,48,49,50,52,53,54,55,57,61,63,64,65,66,67,68,69,70,71,79,80,84,85,86,90,101,103,104,106,114,119,125,128,129,130,131,134,],[-63,43,-62,-55,-56,-57,-68,-69,-70,-71,-72,43,-55,-62,-58,43,43,43,43,43,43,-54,43,-61,43,43,43,43,43,43,43,43,43,43,-55,43,-59,-60,-29,-52,43,43,43,43,43,-53,43,-64,43,43,43,]),'RPAR':([7,12,20,21,23,24,25,26,27,31,32,33,46,47,48,52,53,54,55,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,90,95,101,103,104,113,115,117,119,124,125,128,129,130,134,],[-63,47,-56,-57,-68,-69,-70,-71,-72,61,-55,-62,-27,-58,85,-40,-41,-42,-54,-61,-67,-43,-44,-45,-46,-47,-48,-49,-50,-51,-20,-21,-22,-23,-24,-39,-55,99,101,-25,-66,-59,-60,-29,-67,-52,-34,-36,125,-28,-26,-65,-27,-53,-35,-64,-37,-38,]),'THEN':([7,20,21,23,24,25,26,27,32,33,47,49,52,53,54,55,61,63,64,65,66,67,68,69,70,71,79,85,86,90,101,103,104,125,128,129,130,134,],[-63,-56,-57,-68,-69,-70,-71,-72,-55,-62,-58,87,-40,-41,-42,-54,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,-29,-52,-34,-36,-53,-35,-64,-37,-38,]),'DO':([7,20,21,23,24,25,26,27,32,33,47,50,52,53,54,55,61,63,64,65,66,67,68,69,70,71,79,85,86,90,101,103,104,125,128,129,130,134,],[-63,-56,-57,-68,-69,-70,-71,-72,-55,-62,-58,88,-40,-41,-42,-54,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,-29,-52,-34,-36,-53,-35,-64,-37,-38,]),'RBRACE':([7,20,21,22,23,24,25,26,27,32,33,47,52,53,54,55,56,57,60,61,63,64,65,66,67,68,69,70,71,79,85,86,90,92,94,96,101,103,104,106,110,111,125,126,128,129,130,132,134,],[-63,-56,-57,-32,-68,-69,-70,-71,-72,-55,-62,-58,-40,-41,-42,-54,90,-31,-16,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,-29,-33,108,-17,-52,-34,-36,-30,-14,-15,-53,-18,-35,-64,-37,-19,-38,]),'SEMICOLON':([7,20,21,22,23,24,25,26,27,32,33,47,52,53,54,55,56,57,61,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,85,86,90,92,101,103,104,106,114,125,128,129,130,134,],[-63,-56,-57,-32,-68,-69,-70,-71,-72,-55,-62,-58,-40,-41,-42,-54,91,-31,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,96,-20,-21,-22,-23,-24,-39,-59,-60,-29,-33,-52,121,-36,-30,126,-53,-35,-64,-37,-38,]),'COMMA':([7,20,21,23,24,25,26,27,32,33,46,47,52,53,54,55,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,90,95,101,103,104,113,115,117,119,124,125,128,129,130,134,],[-63,-56,-57,-68,-69,-70,-71,-72,-55,-62,-27,-58,-40,-41,-42,-54,-61,-67,-43,-44,-45,-46,-47,-48,-49,-50,-51,-20,-21,-22,-23,-24,-39,-55,100,102,-25,-66,-59,-60,-29,-67,-52,-34,-36,102,-28,-26,-65,-27,-53,-35,-64,-37,-38,]),'ELSE':([7,20,21,23,24,25,26,27,32,33,47,52,53,54,55,61,63,64,65,66,67,68,69,70,71,79,85,86,90,101,103,104,125,128,129,130,134,],[-63,-56,-57,-68,-69,-70,-71,-72,-55,-62,-58,-40,-41,-42,-54,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-39,-59,-60,-29,-52,120,-36,-53,-35,-64,-37,-38,]),'IN':([7,20,21,23,24,25,26,27,32,33,47,52,53,54,55,61,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,85,86,90,101,103,104,105,125,128,129,130,131,134,],[-63,-56,-57,-68,-69,-70,-71,-72,-55,-62,-58,-40,-41,-42,-54,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-20,-21,-22,-23,-24,-39,-59,-60,-29,-52,-34,-36,122,-53,-35,-64,-37,133,-38,]),'COLON':([11,51,80,99,112,118,],[44,89,98,116,44,98,]),'ASSIGN':([11,32,73,74,75,76,77,78,80,105,],[45,45,97,-20,-21,-22,-23,-24,45,123,]),'EXTENDS':([30,],[59,]),'INT32':([44,89,98,116,],[75,75,75,75,]),'BOOL':([44,89,98,116,],[76,76,76,76,]),'STRING':([44,89,98,116,],[77,77,77,77,]),'UNIT':([44,89,98,116,],[78,78,78,78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'program':([0,],[2,]),'class':([0,2,],[3,28,]),'field':([0,2,94,],[4,4,110,]),'method':([0,2,94,],[5,5,111,]),'expression':([0,2,7,12,13,14,16,17,18,22,34,35,36,37,38,39,40,41,42,45,46,62,87,88,91,95,97,102,120,122,123,133,],[8,8,31,48,49,50,52,53,54,57,63,64,65,66,67,68,69,70,71,79,84,84,103,104,106,84,114,119,128,130,131,134,]),'block':([0,2,7,12,13,14,16,17,18,22,34,35,36,37,38,39,40,41,42,45,46,62,87,88,91,95,97,102,120,122,123,127,133,],[10,10,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,132,33,]),'literal':([0,2,7,12,13,14,16,17,18,22,34,35,36,37,38,39,40,41,42,45,46,62,87,88,91,95,97,102,120,122,123,133,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'boolean-literal':([0,2,7,12,13,14,16,17,18,22,34,35,36,37,38,39,40,41,42,45,46,62,87,88,91,95,97,102,120,122,123,133,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'inblock':([22,],[56,]),'class-body':([30,93,],[58,107,]),'type':([44,89,98,116,],[73,105,115,127,]),'formals':([46,124,],[81,81,]),'args':([46,62,95,],[82,82,113,]),'formal':([46,100,124,],[83,117,83,]),'class-body-in':([60,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> program','init',1,'p_init','parserFile.py',87),
  ('program -> program class','program',2,'p_program','parserFile.py',91),
  ('program -> class','program',1,'p_program','parserFile.py',92),
  ('class -> field','class',1,'p_field_method_error','parserFile.py',99),
  ('class -> method','class',1,'p_field_method_error','parserFile.py',100),
  ('class -> CLASS error','class',2,'p_class_error','parserFile.py',106),
  ('class -> expression','class',1,'p_general_class_error','parserFile.py',111),
  ('class -> TYPE_IDENTIFIER','class',1,'p_general_class_error','parserFile.py',112),
  ('class -> block','class',1,'p_general_class_error','parserFile.py',113),
  ('class -> CLASS TYPE_IDENTIFIER class-body','class',3,'p_class','parserFile.py',119),
  ('class -> CLASS TYPE_IDENTIFIER EXTENDS TYPE_IDENTIFIER class-body','class',5,'p_class','parserFile.py',120),
  ('class-body -> LBRACE class-body-in RBRACE','class-body',3,'p_class_body','parserFile.py',130),
  ('class-body -> LBRACE class-body-in error','class-body',3,'p_class_braces_error','parserFile.py',134),
  ('class-body-in -> class-body-in field','class-body-in',2,'p_class_body_field','parserFile.py',139),
  ('class-body-in -> class-body-in method','class-body-in',2,'p_class_body_method','parserFile.py',144),
  ('class-body-in -> <empty>','class-body-in',0,'p_class_body_empty','parserFile.py',149),
  ('field -> OBJECT_IDENTIFIER COLON type SEMICOLON','field',4,'p_field','parserFile.py',153),
  ('field -> OBJECT_IDENTIFIER COLON type ASSIGN expression SEMICOLON','field',6,'p_field','parserFile.py',154),
  ('method -> OBJECT_IDENTIFIER LPAR formals RPAR COLON type block','method',7,'p_method','parserFile.py',162),
  ('type -> TYPE_IDENTIFIER','type',1,'p_type','parserFile.py',166),
  ('type -> INT32','type',1,'p_type','parserFile.py',167),
  ('type -> BOOL','type',1,'p_type','parserFile.py',168),
  ('type -> STRING','type',1,'p_type','parserFile.py',169),
  ('type -> UNIT','type',1,'p_type','parserFile.py',170),
  ('formals -> formal','formals',1,'p_formals','parserFile.py',174),
  ('formals -> formals COMMA formal','formals',3,'p_formals','parserFile.py',175),
  ('formals -> <empty>','formals',0,'p_formals','parserFile.py',176),
  ('formal -> OBJECT_IDENTIFIER COLON type','formal',3,'p_formal','parserFile.py',185),
  ('block -> LBRACE inblock RBRACE','block',3,'p_block','parserFile.py',189),
  ('inblock -> inblock SEMICOLON expression','inblock',3,'p_block_inside','parserFile.py',194),
  ('inblock -> expression','inblock',1,'p_block_inside','parserFile.py',195),
  ('inblock -> <empty>','inblock',0,'p_block_inside','parserFile.py',196),
  ('inblock -> inblock error','inblock',2,'p_block_error','parserFile.py',205),
  ('expression -> IF expression THEN expression','expression',4,'p_if','parserFile.py',215),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_if','parserFile.py',216),
  ('expression -> WHILE expression DO expression','expression',4,'p_while','parserFile.py',223),
  ('expression -> LET OBJECT_IDENTIFIER COLON type IN expression','expression',6,'p_let','parserFile.py',227),
  ('expression -> LET OBJECT_IDENTIFIER COLON type ASSIGN expression IN expression','expression',8,'p_let','parserFile.py',228),
  ('expression -> OBJECT_IDENTIFIER ASSIGN expression','expression',3,'p_assign','parserFile.py',235),
  ('expression -> NOT expression','expression',2,'p_unary_operators','parserFile.py',239),
  ('expression -> MINUS expression','expression',2,'p_unary_operators','parserFile.py',240),
  ('expression -> ISNULL expression','expression',2,'p_unary_operators','parserFile.py',241),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','parserFile.py',245),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','parserFile.py',246),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','parserFile.py',247),
  ('expression -> expression DIV expression','expression',3,'p_binary_operators','parserFile.py',248),
  ('expression -> expression EQUAL expression','expression',3,'p_binary_operators','parserFile.py',249),
  ('expression -> expression LOWER_EQUAL expression','expression',3,'p_binary_operators','parserFile.py',250),
  ('expression -> expression LOWER expression','expression',3,'p_binary_operators','parserFile.py',251),
  ('expression -> expression POW expression','expression',3,'p_binary_operators','parserFile.py',252),
  ('expression -> expression AND expression','expression',3,'p_binary_operators','parserFile.py',253),
  ('expression -> OBJECT_IDENTIFIER LPAR args RPAR','expression',4,'p_object_call','parserFile.py',258),
  ('expression -> expression DOT OBJECT_IDENTIFIER LPAR args RPAR','expression',6,'p_object_call','parserFile.py',259),
  ('expression -> NEW TYPE_IDENTIFIER','expression',2,'p_new_type','parserFile.py',266),
  ('expression -> OBJECT_IDENTIFIER','expression',1,'p_expression_object','parserFile.py',270),
  ('expression -> SELF','expression',1,'p_expression_self','parserFile.py',274),
  ('expression -> literal','expression',1,'p_expression_literal','parserFile.py',278),
  ('expression -> LPAR RPAR','expression',2,'p_par_alone','parserFile.py',282),
  ('expression -> LPAR expression RPAR','expression',3,'p_par_expression','parserFile.py',286),
  ('expression -> LPAR expression error','expression',3,'p_par_error','parserFile.py',290),
  ('expression -> error expression RPAR','expression',3,'p_par_error','parserFile.py',291),
  ('expression -> block','expression',1,'p_expression_block','parserFile.py',296),
  ('expression -> error','expression',1,'p_expression_error','parserFile.py',300),
  ('expression -> IF expression THEN expression SEMICOLON error','expression',6,'p_expression_error','parserFile.py',301),
  ('args -> args COMMA expression','args',3,'p_args','parserFile.py',309),
  ('args -> expression','args',1,'p_args','parserFile.py',310),
  ('args -> <empty>','args',0,'p_args','parserFile.py',311),
  ('literal -> INTEGER_LITERAL','literal',1,'p_literal','parserFile.py',320),
  ('literal -> string_literal','literal',1,'p_literal','parserFile.py',321),
  ('literal -> boolean-literal','literal',1,'p_literal','parserFile.py',322),
  ('boolean-literal -> TRUE','boolean-literal',1,'p_boolean_literal','parserFile.py',326),
  ('boolean-literal -> FALSE','boolean-literal',1,'p_boolean_literal','parserFile.py',327),
]
