
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initrightASSIGNleftANDrightNOTnonassocLOWEREQUALLOWER_EQUALleftPLUSMINUSleftTIMESDIVrightISNULLUMINUSrightPOWleftDOTAND ASSIGN BOOL CLASS COLON COMMA DIV DO DOT ELSE EQUAL EXTENDS FALSE IF IN INT32 INTEGER_LITERAL ISNULL LBRACE LET LOWER LOWER_EQUAL LPAR MINUS NEW NOT OBJECT_IDENTIFIER PLUS POW RBRACE RPAR SELF SEMICOLON STRING THEN TIMES TRUE TYPE_IDENTIFIER UNIT WHILE string_literalinit : programprogram : program class\n                    | classclass : field\n                | methodclass : CLASS errorclass : expression\n                | TYPE_IDENTIFIER\n                | blockclass : CLASS new_class_scope class-body\n                | CLASS new_class_scope EXTENDS TYPE_IDENTIFIER class-bodynew_class_scope : TYPE_IDENTIFIERclass-body : LBRACE class-body-in RBRACEclass-body : LBRACE class-body-in errorclass-body-in : class-body-in fieldclass-body-in : class-body-in methodclass-body-in : field : OBJECT_IDENTIFIER COLON type SEMICOLON\n                | OBJECT_IDENTIFIER COLON type ASSIGN expression SEMICOLONmethod : new_method LPAR formals RPAR COLON type blocknew_method : OBJECT_IDENTIFIERnew_variables_scope :type : TYPE_IDENTIFIER\n                | INT32\n                | BOOL\n                | STRING\n                | UNIT formals : formal\n                | formals COMMA formal\n                | formal : OBJECT_IDENTIFIER COLON typeblock : LBRACE check_block new_variables_scope inblock RBRACEcheck_block :inblock : inblock SEMICOLON expression\n                | expression\n                |inblock : inblock error expression : IF expression THEN expression\n                    | IF expression THEN expression ELSE expressionexpression : WHILE expression DO expressionexpression : LET let_type IN expression\n                    | LET let_type ASSIGN expression IN expressionlet_type : OBJECT_IDENTIFIER COLON typeexpression : OBJECT_IDENTIFIER ASSIGN expressionexpression : NOT expression check_bool\n                    | MINUS expression check_int %prec UMINUScheck_int :check_bool :expression : ISNULL expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIV expression\n                  | expression EQUAL expression\n                  | expression LOWER_EQUAL expression\n                  | expression LOWER expression\n                  | expression POW expression\n                  | expression AND expressionexpression : OBJECT_IDENTIFIER LPAR args RPAR\n                    | expression DOT OBJECT_IDENTIFIER LPAR args RPARexpression : NEW TYPE_IDENTIFIERexpression : OBJECT_IDENTIFIERexpression : SELFexpression : literalexpression : LPAR RPARexpression : LPAR expression RPARexpression : LPAR expression error\n                    | error expression RPARexpression : blockexpression : errorargs : args COMMA expression\n                | expression\n                |literal : literal_integer\n                | literal_string\n                | boolean-literalliteral_string : string_literalliteral_integer : INTEGER_LITERALboolean-literal : TRUE \n                        | FALSE'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,7,8,9,10,11,21,22,24,25,26,27,28,29,30,31,32,36,37,52,58,59,60,61,63,66,67,68,69,70,71,72,73,74,75,83,89,90,96,97,102,104,109,110,111,116,117,118,130,133,134,136,137,139,],[6,6,-3,-4,-5,-70,-7,-8,-9,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,-65,-48,-47,-49,-61,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,-45,-46,-18,-59,-38,-40,-41,-11,-13,-14,-32,-60,-19,-39,-42,-20,]),'TYPE_IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,20,21,22,24,25,26,27,28,29,30,31,32,36,37,48,52,58,59,60,61,63,64,66,67,68,69,70,71,72,73,74,75,83,89,90,95,96,97,102,104,108,109,110,111,116,117,118,125,130,133,134,136,137,139,],[9,9,-3,-4,-5,34,-70,-7,-8,-9,-62,61,-63,-64,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,78,-65,-48,-47,-49,-61,-10,99,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,78,-45,-46,-18,-59,78,-38,-40,-41,-11,-13,-14,78,-32,-60,-19,-39,-42,-20,]),'OBJECT_IDENTIFIER':([0,2,3,4,5,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,100,101,102,103,104,105,107,109,110,111,116,117,118,119,120,128,129,130,131,133,134,136,137,139,],[11,11,-3,-4,-5,36,-7,-8,-9,-62,36,36,36,57,36,36,36,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,36,36,36,36,36,36,36,36,36,76,36,36,88,-65,-48,-47,-49,-61,-22,-10,-17,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,36,36,36,36,-45,-46,36,121,36,-18,36,-59,36,88,-38,-40,-41,-11,-13,-14,-15,-16,36,36,-32,36,-60,-19,-39,-42,-20,]),'IF':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[14,14,-3,-4,-5,14,-7,-8,-9,-62,14,14,14,14,14,14,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,14,14,14,14,14,14,14,14,14,14,14,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,14,14,14,14,-45,-46,14,14,-18,14,-59,14,-38,-40,-41,-11,-13,-14,14,14,-32,14,-60,-19,-39,-42,-20,]),'WHILE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[15,15,-3,-4,-5,15,-7,-8,-9,-62,15,15,15,15,15,15,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,15,15,15,15,15,15,15,15,15,15,15,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,15,15,15,15,-45,-46,15,15,-18,15,-59,15,-38,-40,-41,-11,-13,-14,15,15,-32,15,-60,-19,-39,-42,-20,]),'LET':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[16,16,-3,-4,-5,16,-7,-8,-9,-62,16,16,16,16,16,16,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,16,16,16,16,16,16,16,16,16,16,16,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,16,16,16,16,-45,-46,16,16,-18,16,-59,16,-38,-40,-41,-11,-13,-14,16,16,-32,16,-60,-19,-39,-42,-20,]),'NOT':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[17,17,-3,-4,-5,17,-7,-8,-9,-62,17,17,17,17,17,17,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,17,17,17,17,17,17,17,17,17,17,17,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,17,17,17,17,-45,-46,17,17,-18,17,-59,17,-38,-40,-41,-11,-13,-14,17,17,-32,17,-60,-19,-39,-42,-20,]),'MINUS':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,49,50,52,53,54,55,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,85,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,112,115,116,117,118,123,124,128,129,130,131,133,134,136,137,138,139,],[18,18,-3,-4,-5,18,39,-8,-9,-62,18,18,18,18,18,18,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,39,-62,-69,18,18,18,18,18,18,18,18,18,18,18,-65,39,39,39,39,39,-49,-61,-22,-10,-68,-50,-51,-52,-53,39,39,39,-57,39,39,39,-66,-67,18,18,18,18,-45,-46,18,18,-18,18,-59,18,39,39,39,39,39,-11,-13,-14,39,39,18,18,-32,18,-60,-19,39,39,39,-20,]),'ISNULL':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[19,19,-3,-4,-5,19,-7,-8,-9,-62,19,19,19,19,19,19,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,19,19,19,19,19,19,19,19,19,19,19,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,19,19,19,19,-45,-46,19,19,-18,19,-59,19,-38,-40,-41,-11,-13,-14,19,19,-32,19,-60,-19,-39,-42,-20,]),'NEW':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[20,20,-3,-4,-5,20,-7,-8,-9,-62,20,20,20,20,20,20,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,20,20,20,20,20,20,20,20,20,20,20,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,20,20,20,20,-45,-46,20,20,-18,20,-59,20,-38,-40,-41,-11,-13,-14,20,20,-32,20,-60,-19,-39,-42,-20,]),'SELF':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[21,21,-3,-4,-5,21,-7,-8,-9,-62,21,21,21,21,21,21,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,21,21,21,21,21,21,21,21,21,21,21,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,21,21,21,21,-45,-46,21,21,-18,21,-59,21,-38,-40,-41,-11,-13,-14,21,21,-32,21,-60,-19,-39,-42,-20,]),'LPAR':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,121,128,129,130,131,133,134,136,137,139,],[13,13,-3,-4,-5,13,-7,-8,-9,50,51,13,13,13,13,13,13,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,50,-69,13,13,13,13,13,13,13,13,13,13,13,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,101,-44,-66,-67,13,13,13,13,-45,-46,13,13,-18,13,-59,13,-38,-40,-41,-11,-13,-14,-21,13,13,-32,13,-60,-19,-39,-42,-20,]),'error':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,53,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,100,101,102,103,104,105,109,110,111,114,115,116,117,118,119,120,128,129,130,131,132,133,134,136,137,138,139,],[7,7,-3,-4,-5,32,7,-7,-8,-9,-62,7,7,7,7,7,7,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,7,7,7,7,7,7,7,7,7,7,7,-65,90,-48,-47,-49,-61,-22,-10,-17,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,7,7,7,7,-45,-46,7,118,7,-18,7,-59,7,-38,-40,-41,132,-35,-11,-13,-14,-15,-16,7,7,-32,7,-37,-60,-19,-39,-42,-34,-20,]),'LBRACE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,89,90,91,92,93,94,96,97,98,99,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,135,136,137,139,],[23,23,-3,-4,-5,23,-7,-8,-9,-62,23,23,23,23,23,23,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,65,-12,-62,-69,23,23,23,23,23,23,23,23,23,23,23,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-23,-24,-25,-26,-27,-44,-66,-67,23,23,23,23,-45,-46,23,65,23,-18,23,-59,23,-38,-40,-41,-11,-13,-14,23,23,-32,23,-60,-19,23,-39,-42,-20,]),'INTEGER_LITERAL':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[27,27,-3,-4,-5,27,-7,-8,-9,-62,27,27,27,27,27,27,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,27,27,27,27,27,27,27,27,27,27,27,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,27,27,27,27,-45,-46,27,27,-18,27,-59,27,-38,-40,-41,-11,-13,-14,27,27,-32,27,-60,-19,-39,-42,-20,]),'string_literal':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[28,28,-3,-4,-5,28,-7,-8,-9,-62,28,28,28,28,28,28,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,28,28,28,28,28,28,28,28,28,28,28,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,28,28,28,28,-45,-46,28,28,-18,28,-59,28,-38,-40,-41,-11,-13,-14,28,28,-32,28,-60,-19,-39,-42,-20,]),'TRUE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[29,29,-3,-4,-5,29,-7,-8,-9,-62,29,29,29,29,29,29,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,29,29,29,29,29,29,29,29,29,29,29,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,29,29,29,29,-45,-46,29,29,-18,29,-59,29,-38,-40,-41,-11,-13,-14,29,29,-32,29,-60,-19,-39,-42,-20,]),'FALSE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,52,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,83,89,90,91,92,93,94,96,97,98,101,102,103,104,105,109,110,111,116,117,118,128,129,130,131,133,134,136,137,139,],[30,30,-3,-4,-5,30,-7,-8,-9,-62,30,30,30,30,30,30,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,30,30,30,30,30,30,30,30,30,30,30,-65,-48,-47,-49,-61,-22,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,30,30,30,30,-45,-46,30,30,-18,30,-59,30,-38,-40,-41,-11,-13,-14,30,30,-32,30,-60,-19,-39,-42,-20,]),'$end':([1,2,3,4,5,7,8,9,10,11,21,22,24,25,26,27,28,29,30,31,32,36,37,52,58,59,60,61,63,66,67,68,69,70,71,72,73,74,75,83,89,90,96,97,102,104,109,110,111,116,117,118,130,133,134,136,137,139,],[0,-1,-3,-4,-5,-70,-7,-8,-9,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,-2,-6,-62,-69,-65,-48,-47,-49,-61,-10,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,-45,-46,-18,-59,-38,-40,-41,-11,-13,-14,-32,-60,-19,-39,-42,-20,]),'PLUS':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,52,53,54,55,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,85,89,90,96,97,104,109,110,111,112,115,123,124,130,133,136,137,138,],[-70,38,-69,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,38,-62,-69,-65,38,38,38,38,38,-49,-61,-68,-50,-51,-52,-53,38,38,38,-57,38,38,38,-66,-67,-45,-46,-59,38,38,38,38,38,38,38,-32,-60,38,38,38,]),'TIMES':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,52,53,54,55,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,85,89,90,96,97,104,109,110,111,112,115,123,124,130,133,136,137,138,],[-70,40,-69,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,40,-62,-69,-65,40,40,40,40,40,-49,-61,-68,40,40,-52,-53,40,40,40,-57,40,40,40,-66,-67,-45,-46,-59,40,40,40,40,40,40,40,-32,-60,40,40,40,]),'DIV':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,52,53,54,55,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,85,89,90,96,97,104,109,110,111,112,115,123,124,130,133,136,137,138,],[-70,41,-69,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,41,-62,-69,-65,41,41,41,41,41,-49,-61,-68,41,41,-52,-53,41,41,41,-57,41,41,41,-66,-67,-45,-46,-59,41,41,41,41,41,41,41,-32,-60,41,41,41,]),'EQUAL':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,52,53,54,55,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,85,89,90,96,97,104,109,110,111,112,115,123,124,130,133,136,137,138,],[-70,42,-69,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,42,-62,-69,-65,42,42,42,42,42,-49,-61,-68,-50,-51,-52,-53,None,None,None,-57,42,42,42,-66,-67,-45,-46,-59,42,42,42,42,42,42,42,-32,-60,42,42,42,]),'LOWER_EQUAL':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,52,53,54,55,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,85,89,90,96,97,104,109,110,111,112,115,123,124,130,133,136,137,138,],[-70,43,-69,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,43,-62,-69,-65,43,43,43,43,43,-49,-61,-68,-50,-51,-52,-53,None,None,None,-57,43,43,43,-66,-67,-45,-46,-59,43,43,43,43,43,43,43,-32,-60,43,43,43,]),'LOWER':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,52,53,54,55,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,85,89,90,96,97,104,109,110,111,112,115,123,124,130,133,136,137,138,],[-70,44,-69,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,44,-62,-69,-65,44,44,44,44,44,-49,-61,-68,-50,-51,-52,-53,None,None,None,-57,44,44,44,-66,-67,-45,-46,-59,44,44,44,44,44,44,44,-32,-60,44,44,44,]),'POW':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,52,53,54,55,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,85,89,90,96,97,104,109,110,111,112,115,123,124,130,133,136,137,138,],[-70,45,-69,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,45,-62,-69,-65,45,45,45,45,45,45,-61,-68,45,45,45,45,45,45,45,45,45,45,45,-66,-67,-45,-46,-59,45,45,45,45,45,45,45,-32,-60,45,45,45,]),'AND':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,52,53,54,55,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,85,89,90,96,97,104,109,110,111,112,115,123,124,130,133,136,137,138,],[-70,46,-69,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,46,-62,-69,-65,46,46,46,46,46,-49,-61,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,46,46,-66,-67,-45,-46,-59,46,46,46,46,46,46,46,-32,-60,46,46,46,]),'DOT':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,52,53,54,55,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,85,89,90,96,97,104,109,110,111,112,115,123,124,130,133,136,137,138,],[-70,47,-69,-62,-63,-64,-74,-75,-76,-78,-77,-79,-80,47,-62,-69,-65,47,47,47,47,47,47,-61,-68,47,47,47,47,47,47,47,47,47,47,47,-66,-67,-45,-46,-59,47,47,47,47,47,47,47,-32,-60,47,47,47,]),'RPAR':([7,13,21,22,24,25,26,27,28,29,30,35,36,37,50,51,52,53,58,59,60,61,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,89,90,96,97,101,104,109,110,111,122,124,126,127,130,133,136,137,],[-70,52,-63,-64,-74,-75,-76,-78,-77,-79,-80,66,-62,-69,-73,-30,-65,89,-48,-47,-49,-61,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-23,-24,-25,-26,-27,-44,104,-72,106,-28,-66,-67,-45,-46,-73,-59,-38,-40,-41,133,-71,-29,-31,-32,-60,-39,-42,]),'THEN':([7,21,22,24,25,26,27,28,29,30,36,37,52,54,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,89,90,96,97,104,109,110,111,130,133,136,137,],[-70,-63,-64,-74,-75,-76,-78,-77,-79,-80,-62,-69,-65,91,-48,-47,-49,-61,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,-45,-46,-59,-38,-40,-41,-32,-60,-39,-42,]),'DO':([7,21,22,24,25,26,27,28,29,30,36,37,52,55,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,89,90,96,97,104,109,110,111,130,133,136,137,],[-70,-63,-64,-74,-75,-76,-78,-77,-79,-80,-62,-69,-65,92,-48,-47,-49,-61,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,-45,-46,-59,-38,-40,-41,-32,-60,-39,-42,]),'COMMA':([7,21,22,24,25,26,27,28,29,30,36,37,50,51,52,58,59,60,61,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,89,90,96,97,101,104,109,110,111,122,124,126,127,130,133,136,137,],[-70,-63,-64,-74,-75,-76,-78,-77,-79,-80,-62,-69,-73,-30,-65,-48,-47,-49,-61,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-23,-24,-25,-26,-27,-44,105,-72,107,-28,-66,-67,-45,-46,-73,-59,-38,-40,-41,105,-71,-29,-31,-32,-60,-39,-42,]),'ELSE':([7,21,22,24,25,26,27,28,29,30,36,37,52,58,59,60,61,66,67,68,69,70,71,72,73,74,75,83,89,90,96,97,104,109,110,111,130,133,136,137,],[-70,-63,-64,-74,-75,-76,-78,-77,-79,-80,-62,-69,-65,-48,-47,-49,-61,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,-45,-46,-59,128,-40,-41,-32,-60,-39,-42,]),'IN':([7,21,22,24,25,26,27,28,29,30,36,37,52,56,58,59,60,61,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,89,90,96,97,104,109,110,111,112,113,130,133,136,137,],[-70,-63,-64,-74,-75,-76,-78,-77,-79,-80,-62,-69,-65,93,-48,-47,-49,-61,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-23,-24,-25,-26,-27,-44,-66,-67,-45,-46,-59,-38,-40,-41,129,-43,-32,-60,-39,-42,]),'RBRACE':([7,21,22,23,24,25,26,27,28,29,30,36,37,52,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,83,89,90,96,97,98,100,102,104,109,110,111,114,115,119,120,130,132,133,134,136,137,138,139,],[-70,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-62,-69,-65,-48,-47,-49,-61,-22,-17,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,-44,-66,-67,-45,-46,-36,117,-18,-59,-38,-40,-41,130,-35,-15,-16,-32,-37,-60,-19,-39,-42,-34,-20,]),'SEMICOLON':([7,21,22,23,24,25,26,27,28,29,30,36,37,52,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,89,90,96,97,98,104,109,110,111,114,115,123,130,132,133,136,137,138,],[-70,-63,-64,-33,-74,-75,-76,-78,-77,-79,-80,-62,-69,-65,-48,-47,-49,-61,-22,-68,-50,-51,-52,-53,-54,-55,-56,-57,-58,102,-23,-24,-25,-26,-27,-44,-66,-67,-45,-46,-36,-59,-38,-40,-41,131,-35,134,-32,-37,-60,-39,-42,-34,]),'COLON':([11,57,88,106,121,],[48,95,108,125,48,]),'ASSIGN':([11,36,56,77,78,79,80,81,82,113,],[49,49,94,103,-23,-24,-25,-26,-27,-43,]),'EXTENDS':([33,34,],[64,-12,]),'INT32':([48,95,108,125,],[79,79,79,79,]),'BOOL':([48,95,108,125,],[80,80,80,80,]),'STRING':([48,95,108,125,],[81,81,81,81,]),'UNIT':([48,95,108,125,],[82,82,82,82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'program':([0,],[2,]),'class':([0,2,],[3,31,]),'field':([0,2,100,],[4,4,119,]),'method':([0,2,100,],[5,5,120,]),'expression':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,50,91,92,93,94,98,101,103,105,128,129,131,],[8,8,35,53,54,55,58,59,60,67,68,69,70,71,72,73,74,75,83,85,109,110,111,112,115,85,123,124,136,137,138,]),'block':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,50,91,92,93,94,98,101,103,105,128,129,131,135,],[10,10,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,139,]),'new_method':([0,2,100,],[12,12,12,]),'literal':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,50,91,92,93,94,98,101,103,105,128,129,131,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'literal_integer':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,50,91,92,93,94,98,101,103,105,128,129,131,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'literal_string':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,50,91,92,93,94,98,101,103,105,128,129,131,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'boolean-literal':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,50,91,92,93,94,98,101,103,105,128,129,131,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'new_class_scope':([6,],[33,]),'let_type':([16,],[56,]),'check_block':([23,],[62,]),'class-body':([33,99,],[63,116,]),'type':([48,95,108,125,],[77,113,127,135,]),'args':([50,101,],[84,122,]),'formals':([51,],[86,]),'formal':([51,107,],[87,126,]),'check_bool':([58,],[96,]),'check_int':([59,],[97,]),'new_variables_scope':([62,],[98,]),'class-body-in':([65,],[100,]),'inblock':([98,],[114,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> program','init',1,'p_init','classCheckerFile.py',211),
  ('program -> program class','program',2,'p_program','classCheckerFile.py',220),
  ('program -> class','program',1,'p_program','classCheckerFile.py',221),
  ('class -> field','class',1,'p_field_method_error','classCheckerFile.py',228),
  ('class -> method','class',1,'p_field_method_error','classCheckerFile.py',229),
  ('class -> CLASS error','class',2,'p_class_error','classCheckerFile.py',235),
  ('class -> expression','class',1,'p_general_class_error','classCheckerFile.py',240),
  ('class -> TYPE_IDENTIFIER','class',1,'p_general_class_error','classCheckerFile.py',241),
  ('class -> block','class',1,'p_general_class_error','classCheckerFile.py',242),
  ('class -> CLASS new_class_scope class-body','class',3,'p_class','classCheckerFile.py',248),
  ('class -> CLASS new_class_scope EXTENDS TYPE_IDENTIFIER class-body','class',5,'p_class','classCheckerFile.py',249),
  ('new_class_scope -> TYPE_IDENTIFIER','new_class_scope',1,'p_new_class_scope','classCheckerFile.py',262),
  ('class-body -> LBRACE class-body-in RBRACE','class-body',3,'p_class_body','classCheckerFile.py',279),
  ('class-body -> LBRACE class-body-in error','class-body',3,'p_class_braces_error','classCheckerFile.py',283),
  ('class-body-in -> class-body-in field','class-body-in',2,'p_class_body_field','classCheckerFile.py',288),
  ('class-body-in -> class-body-in method','class-body-in',2,'p_class_body_method','classCheckerFile.py',293),
  ('class-body-in -> <empty>','class-body-in',0,'p_class_body_empty','classCheckerFile.py',299),
  ('field -> OBJECT_IDENTIFIER COLON type SEMICOLON','field',4,'p_field','classCheckerFile.py',303),
  ('field -> OBJECT_IDENTIFIER COLON type ASSIGN expression SEMICOLON','field',6,'p_field','classCheckerFile.py',304),
  ('method -> new_method LPAR formals RPAR COLON type block','method',7,'p_method','classCheckerFile.py',322),
  ('new_method -> OBJECT_IDENTIFIER','new_method',1,'p_new_method','classCheckerFile.py',331),
  ('new_variables_scope -> <empty>','new_variables_scope',0,'p_new_variables_scope','classCheckerFile.py',344),
  ('type -> TYPE_IDENTIFIER','type',1,'p_type','classCheckerFile.py',348),
  ('type -> INT32','type',1,'p_type','classCheckerFile.py',349),
  ('type -> BOOL','type',1,'p_type','classCheckerFile.py',350),
  ('type -> STRING','type',1,'p_type','classCheckerFile.py',351),
  ('type -> UNIT','type',1,'p_type','classCheckerFile.py',352),
  ('formals -> formal','formals',1,'p_formals','classCheckerFile.py',356),
  ('formals -> formals COMMA formal','formals',3,'p_formals','classCheckerFile.py',357),
  ('formals -> <empty>','formals',0,'p_formals','classCheckerFile.py',358),
  ('formal -> OBJECT_IDENTIFIER COLON type','formal',3,'p_formal','classCheckerFile.py',367),
  ('block -> LBRACE check_block new_variables_scope inblock RBRACE','block',5,'p_block','classCheckerFile.py',379),
  ('check_block -> <empty>','check_block',0,'p_check_block','classCheckerFile.py',384),
  ('inblock -> inblock SEMICOLON expression','inblock',3,'p_block_inside','classCheckerFile.py',389),
  ('inblock -> expression','inblock',1,'p_block_inside','classCheckerFile.py',390),
  ('inblock -> <empty>','inblock',0,'p_block_inside','classCheckerFile.py',391),
  ('inblock -> inblock error','inblock',2,'p_block_error','classCheckerFile.py',400),
  ('expression -> IF expression THEN expression','expression',4,'p_if','classCheckerFile.py',405),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_if','classCheckerFile.py',406),
  ('expression -> WHILE expression DO expression','expression',4,'p_while','classCheckerFile.py',413),
  ('expression -> LET let_type IN expression','expression',4,'p_let','classCheckerFile.py',417),
  ('expression -> LET let_type ASSIGN expression IN expression','expression',6,'p_let','classCheckerFile.py',418),
  ('let_type -> OBJECT_IDENTIFIER COLON type','let_type',3,'p_let_type','classCheckerFile.py',425),
  ('expression -> OBJECT_IDENTIFIER ASSIGN expression','expression',3,'p_assign','classCheckerFile.py',430),
  ('expression -> NOT expression check_bool','expression',3,'p_unary_operators','classCheckerFile.py',434),
  ('expression -> MINUS expression check_int','expression',3,'p_unary_operators','classCheckerFile.py',435),
  ('check_int -> <empty>','check_int',0,'p_check_int','classCheckerFile.py',439),
  ('check_bool -> <empty>','check_bool',0,'p_check_bool','classCheckerFile.py',443),
  ('expression -> ISNULL expression','expression',2,'p_unary_isnull','classCheckerFile.py',447),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','classCheckerFile.py',451),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','classCheckerFile.py',452),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','classCheckerFile.py',453),
  ('expression -> expression DIV expression','expression',3,'p_binary_operators','classCheckerFile.py',454),
  ('expression -> expression EQUAL expression','expression',3,'p_binary_operators','classCheckerFile.py',455),
  ('expression -> expression LOWER_EQUAL expression','expression',3,'p_binary_operators','classCheckerFile.py',456),
  ('expression -> expression LOWER expression','expression',3,'p_binary_operators','classCheckerFile.py',457),
  ('expression -> expression POW expression','expression',3,'p_binary_operators','classCheckerFile.py',458),
  ('expression -> expression AND expression','expression',3,'p_binary_operators','classCheckerFile.py',459),
  ('expression -> OBJECT_IDENTIFIER LPAR args RPAR','expression',4,'p_object_call','classCheckerFile.py',464),
  ('expression -> expression DOT OBJECT_IDENTIFIER LPAR args RPAR','expression',6,'p_object_call','classCheckerFile.py',465),
  ('expression -> NEW TYPE_IDENTIFIER','expression',2,'p_new_type','classCheckerFile.py',473),
  ('expression -> OBJECT_IDENTIFIER','expression',1,'p_expression_object','classCheckerFile.py',477),
  ('expression -> SELF','expression',1,'p_expression_self','classCheckerFile.py',481),
  ('expression -> literal','expression',1,'p_expression_literal','classCheckerFile.py',485),
  ('expression -> LPAR RPAR','expression',2,'p_par_alone','classCheckerFile.py',489),
  ('expression -> LPAR expression RPAR','expression',3,'p_par_expression','classCheckerFile.py',493),
  ('expression -> LPAR expression error','expression',3,'p_par_error','classCheckerFile.py',497),
  ('expression -> error expression RPAR','expression',3,'p_par_error','classCheckerFile.py',498),
  ('expression -> block','expression',1,'p_expression_block','classCheckerFile.py',503),
  ('expression -> error','expression',1,'p_expression_error','classCheckerFile.py',507),
  ('args -> args COMMA expression','args',3,'p_args','classCheckerFile.py',512),
  ('args -> expression','args',1,'p_args','classCheckerFile.py',513),
  ('args -> <empty>','args',0,'p_args','classCheckerFile.py',514),
  ('literal -> literal_integer','literal',1,'p_literal','classCheckerFile.py',523),
  ('literal -> literal_string','literal',1,'p_literal','classCheckerFile.py',524),
  ('literal -> boolean-literal','literal',1,'p_literal','classCheckerFile.py',525),
  ('literal_string -> string_literal','literal_string',1,'p_literal_string','classCheckerFile.py',529),
  ('literal_integer -> INTEGER_LITERAL','literal_integer',1,'p_literal_integer','classCheckerFile.py',533),
  ('boolean-literal -> TRUE','boolean-literal',1,'p_boolean_literal','classCheckerFile.py',537),
  ('boolean-literal -> FALSE','boolean-literal',1,'p_boolean_literal','classCheckerFile.py',538),
]
