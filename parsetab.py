
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initrightASSIGNleftANDrightNOTnonassocLOWEREQUALLOWER_EQUALleftPLUSMINUSleftTIMESDIVrightISNULLUMINUSrightPOWleftDOTAND ASSIGN BOOL CLASS COLON COMMA DIV DO DOT ELSE EQUAL EXTENDS FALSE IF IN INT32 INTEGER_LITERAL ISNULL LBRACE LET LOWER LOWER_EQUAL LPAR MINUS NEW NOT OBJECT_IDENTIFIER PLUS POW RBRACE RPAR SELF SEMICOLON STRING THEN TIMES TRUE TYPE_IDENTIFIER UNIT WHILE string_literalinit : programprogram : program class\n                    | classclass : field\n                | methodclass : CLASS errorclass : expression\n                | TYPE_IDENTIFIER\n                | blockclass : CLASS new_class_scope class-body\n                | CLASS new_class_scope EXTENDS TYPE_IDENTIFIER class-bodynew_class_scope : TYPE_IDENTIFIERclass-body : LBRACE class-body-in RBRACEclass-body : LBRACE class-body-in errorclass-body-in : class-body-in fieldclass-body-in : class-body-in methodclass-body-in : field : OBJECT_IDENTIFIER COLON type SEMICOLON\n                | OBJECT_IDENTIFIER COLON type ASSIGN get_type expression SEMICOLONmethod : OBJECT_IDENTIFIER new_variables_scope LPAR formals RPAR COLON type blocknew_variables_scope :type : TYPE_IDENTIFIER\n                | INT32\n                | BOOL\n                | STRING\n                | UNIT formals : formal\n                | formals COMMA formal\n                | formal : OBJECT_IDENTIFIER COLON typeblock : LBRACE get_type check_block new_variables_scope inblock RBRACEcheck_block :inblock : inblock SEMICOLON expression\n                | expression\n                |inblock : inblock error expression : new_variables_scope IF expression THEN expression\n                    | new_variables_scope IF expression THEN expression ELSE expressionexpression : WHILE expression DO expressionexpression : LET let_type IN expression\n                    | LET let_type ASSIGN expression IN expressionlet_type : OBJECT_IDENTIFIER COLON typeexpression : OBJECT_IDENTIFIER ASSIGN get_type expressionexpression : NOT get_type expression check_bool\n                    | MINUS get_type expression check_int %prec UMINUScheck_int :check_bool :expression : ISNULL expressionexpression : expression store_left PLUS get_type expression store_right check_int2\n                  | expression store_left MINUS get_type expression store_right check_int2\n                  | expression store_left TIMES get_type expression store_right check_int2\n                  | expression store_left DIV get_type expression store_right check_int2\n                  | expression store_left EQUAL get_type expression store_right check_bool2\n                  | expression store_left LOWER_EQUAL get_type expression store_right check_bool2\n                  | expression store_left LOWER get_type expression store_right check_bool2\n                  | expression store_left POW get_type expression store_right check_int2\n                  | expression store_left AND get_type expression store_right check_bool2get_type :store_left :store_right :check_int2 :check_bool2 :expression : OBJECT_IDENTIFIER LPAR args RPAR\n                    | expression DOT OBJECT_IDENTIFIER LPAR args RPARexpression : NEW TYPE_IDENTIFIERexpression : OBJECT_IDENTIFIERexpression : SELFexpression : literalexpression : LPAR RPARexpression : LPAR expression RPARexpression : LPAR expression error\n                    | error expression RPARexpression : blockexpression : error\n                    | IF expression THEN expression SEMICOLON errorargs : args COMMA expression\n                | expression\n                |literal : literal_integer\n                | literal_string\n                | boolean-literalliteral_string : string_literalliteral_integer : INTEGER_LITERALboolean-literal : TRUE \n                        | FALSE'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,7,8,9,10,11,21,22,24,25,26,27,28,29,30,31,32,36,37,45,53,54,56,59,81,82,88,89,103,105,109,113,114,117,118,120,121,122,126,127,128,129,130,131,132,133,134,141,146,147,148,149,150,151,152,153,154,155,161,162,163,166,167,168,169,170,171,172,173,174,175,177,179,],[6,6,-3,-4,-5,-74,-7,-8,-9,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-69,-48,-65,-10,-72,-70,-71,-47,-46,-18,-43,-63,-39,-40,-44,-45,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,-37,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'TYPE_IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,20,21,22,24,25,26,27,28,29,30,31,32,36,37,40,45,53,54,56,57,59,81,82,87,88,89,103,105,109,113,114,117,118,120,121,122,126,127,128,129,130,131,132,133,134,137,141,146,147,148,149,150,151,152,153,154,155,158,161,162,163,166,167,168,169,170,171,172,173,174,175,177,179,],[9,9,-3,-4,-5,34,-74,-7,-8,-9,-66,54,-67,-68,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,71,-69,-48,-65,-10,91,-72,-70,-71,71,-47,-46,-18,-43,-63,-39,-40,-44,-45,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,71,-37,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,71,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'OBJECT_IDENTIFIER':([0,2,3,4,5,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,39,41,43,44,45,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,76,77,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,136,139,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[11,11,-3,-4,-5,36,-7,-8,-9,-66,36,36,36,50,-58,-58,36,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,69,-58,36,36,-69,36,36,-48,-65,-32,-10,-17,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,36,106,-70,-71,36,36,36,36,-47,-46,-21,125,36,36,36,36,36,36,36,36,36,36,-18,-58,-43,-63,36,36,-39,-40,-44,-45,36,-11,-13,-14,-15,-16,-60,-60,-60,-60,-60,-60,-60,-60,-60,36,106,-37,36,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,36,-75,-41,-31,36,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'WHILE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[15,15,-3,-4,-5,15,-7,-8,-9,-66,15,15,15,-58,-58,15,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,15,15,-69,15,15,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,15,-70,-71,15,15,15,15,-47,-46,-21,15,15,15,15,15,15,15,15,15,15,-18,-58,-43,-63,15,15,-39,-40,-44,-45,15,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,15,-37,15,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,15,-75,-41,-31,15,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'LET':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[16,16,-3,-4,-5,16,-7,-8,-9,-66,16,16,16,-58,-58,16,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,16,16,-69,16,16,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,16,-70,-71,16,16,16,16,-47,-46,-21,16,16,16,16,16,16,16,16,16,16,-18,-58,-43,-63,16,16,-39,-40,-44,-45,16,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,16,-37,16,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,16,-75,-41,-31,16,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'NOT':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[17,17,-3,-4,-5,17,-7,-8,-9,-66,17,17,17,-58,-58,17,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,17,17,-69,17,17,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,17,-70,-71,17,17,17,17,-47,-46,-21,17,17,17,17,17,17,17,17,17,17,-18,-58,-43,-63,17,17,-39,-40,-44,-45,17,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,17,-37,17,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,17,-75,-41,-31,17,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'MINUS':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,79,80,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,115,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,140,141,143,145,146,147,148,149,150,151,152,153,154,155,156,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,178,179,],[18,18,-3,-4,-5,18,-7,-8,-9,-66,18,18,18,-58,-58,18,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-59,-66,-73,61,-58,18,18,-69,-59,-59,-59,18,18,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,18,-59,-59,-70,-71,18,18,18,18,-47,-46,-21,18,18,18,18,18,18,18,18,18,18,-18,-58,-43,-63,18,18,-59,-39,-40,-59,-44,-45,18,-11,-13,-14,-59,-59,-59,-59,-59,-59,-59,-59,-59,18,-59,-37,18,-59,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-59,18,-75,-41,-31,18,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-59,-20,]),'ISNULL':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[19,19,-3,-4,-5,19,-7,-8,-9,-66,19,19,19,-58,-58,19,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,19,19,-69,19,19,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,19,-70,-71,19,19,19,19,-47,-46,-21,19,19,19,19,19,19,19,19,19,19,-18,-58,-43,-63,19,19,-39,-40,-44,-45,19,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,19,-37,19,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,19,-75,-41,-31,19,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'NEW':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[20,20,-3,-4,-5,20,-7,-8,-9,-66,20,20,20,-58,-58,20,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,20,20,-69,20,20,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,20,-70,-71,20,20,20,20,-47,-46,-21,20,20,20,20,20,20,20,20,20,20,-18,-58,-43,-63,20,20,-39,-40,-44,-45,20,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,20,-37,20,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,20,-75,-41,-31,20,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'SELF':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[21,21,-3,-4,-5,21,-7,-8,-9,-66,21,21,21,-58,-58,21,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,21,21,-69,21,21,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,21,-70,-71,21,21,21,21,-47,-46,-21,21,21,21,21,21,21,21,21,21,21,-18,-58,-43,-63,21,21,-39,-40,-44,-45,21,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,21,-37,21,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,21,-75,-41,-31,21,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'LPAR':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,42,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,125,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[13,13,-3,-4,-5,13,-7,-8,-9,43,13,13,13,-58,-58,13,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,43,-73,-58,77,13,13,-69,13,13,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,102,13,-70,-71,13,13,13,13,-47,-46,-21,13,13,13,13,13,13,13,13,13,13,-18,-58,-43,-63,13,13,-39,-40,-44,-45,13,-11,-13,-14,-21,-60,-60,-60,-60,-60,-60,-60,-60,-60,13,-37,13,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,13,-75,-41,-31,13,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'error':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,46,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,],[7,7,-3,-4,-5,32,7,-7,-8,-9,-66,7,7,7,-58,-58,7,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,7,7,-69,82,7,7,-48,-65,-32,-10,-17,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,7,-70,-71,7,7,7,7,-47,-46,-21,122,7,7,7,7,7,7,7,7,7,7,-18,-58,-43,-63,7,7,-39,-40,-44,-45,7,-11,-13,-14,-15,-16,-60,-60,-60,-60,-60,-60,-60,-60,-60,7,-37,161,7,165,-34,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,7,-75,-41,-31,7,-36,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-33,-20,]),'IF':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[14,14,-3,-4,-5,14,-7,-8,-9,-66,44,14,14,14,-58,-58,14,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,14,14,-69,14,14,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,14,-70,-71,14,14,14,14,-47,-46,-21,14,14,14,14,14,14,14,14,14,14,-18,-58,-43,-63,14,14,-39,-40,-44,-45,14,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,14,-37,14,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,14,-75,-41,-31,14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'LBRACE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,81,82,83,84,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,179,],[23,23,-3,-4,-5,23,-7,-8,-9,-66,23,23,23,-58,-58,23,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,58,-12,-66,-73,-58,23,23,-69,23,23,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,-22,-23,-24,-25,-26,23,-70,-71,23,23,23,23,-47,-46,-21,58,23,23,23,23,23,23,23,23,23,23,-18,-58,-43,-63,23,23,-39,-40,-44,-45,23,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,23,-37,23,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,23,-75,-41,-31,23,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,23,-38,-20,]),'INTEGER_LITERAL':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[27,27,-3,-4,-5,27,-7,-8,-9,-66,27,27,27,-58,-58,27,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,27,27,-69,27,27,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,27,-70,-71,27,27,27,27,-47,-46,-21,27,27,27,27,27,27,27,27,27,27,-18,-58,-43,-63,27,27,-39,-40,-44,-45,27,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,27,-37,27,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,27,-75,-41,-31,27,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'string_literal':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[28,28,-3,-4,-5,28,-7,-8,-9,-66,28,28,28,-58,-58,28,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,28,28,-69,28,28,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,28,-70,-71,28,28,28,28,-47,-46,-21,28,28,28,28,28,28,28,28,28,28,-18,-58,-43,-63,28,28,-39,-40,-44,-45,28,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,28,-37,28,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,28,-75,-41,-31,28,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'TRUE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[29,29,-3,-4,-5,29,-7,-8,-9,-66,29,29,29,-58,-58,29,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,29,29,-69,29,29,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,29,-70,-71,29,29,29,29,-47,-46,-21,29,29,29,29,29,29,29,29,29,29,-18,-58,-43,-63,29,29,-39,-40,-44,-45,29,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,29,-37,29,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,29,-75,-41,-31,29,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'FALSE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,41,43,44,45,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,76,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,113,114,117,118,119,120,121,122,126,127,128,129,130,131,132,133,134,136,141,143,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,177,179,],[30,30,-3,-4,-5,30,-7,-8,-9,-66,30,30,30,-58,-58,30,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-58,30,30,-69,30,30,-48,-65,-32,-10,-72,-58,-58,-58,-58,-58,-58,-58,-58,-58,30,-70,-71,30,30,30,30,-47,-46,-21,30,30,30,30,30,30,30,30,30,30,-18,-58,-43,-63,30,30,-39,-40,-44,-45,30,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,30,-37,30,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,30,-75,-41,-31,30,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'$end':([1,2,3,4,5,7,8,9,10,11,21,22,24,25,26,27,28,29,30,31,32,36,37,45,53,54,56,59,81,82,88,89,103,105,109,113,114,117,118,120,121,122,126,127,128,129,130,131,132,133,134,141,146,147,148,149,150,151,152,153,154,155,161,162,163,166,167,168,169,170,171,172,173,174,175,177,179,],[0,-1,-3,-4,-5,-74,-7,-8,-9,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,-2,-6,-66,-73,-69,-48,-65,-10,-72,-70,-71,-47,-46,-18,-43,-63,-39,-40,-44,-45,-11,-13,-14,-60,-60,-60,-60,-60,-60,-60,-60,-60,-37,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-20,]),'DOT':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,45,46,47,48,53,54,59,79,80,81,82,88,89,105,109,112,113,114,115,117,118,126,127,128,129,130,131,132,133,134,140,141,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,166,167,168,169,170,171,172,173,174,177,178,],[-74,39,-73,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,39,-66,-73,-69,39,39,39,39,-65,-72,39,39,-70,-71,39,39,39,-63,39,39,39,39,-44,-45,39,39,39,39,39,39,39,39,39,39,39,39,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,39,-75,39,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,39,39,]),'PLUS':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,38,45,46,47,48,53,54,59,79,80,81,82,88,89,105,109,112,113,114,115,117,118,126,127,128,129,130,131,132,133,134,140,141,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,166,167,168,169,170,171,172,173,174,177,178,],[-74,-59,-73,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,-59,-66,-73,60,-69,-59,-59,-59,-48,-65,-72,-59,-59,-70,-71,-47,-46,-43,-63,-59,-39,-40,-59,-44,-45,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-37,-59,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-59,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,-59,]),'TIMES':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,38,45,46,47,48,53,54,59,79,80,81,82,88,89,105,109,112,113,114,115,117,118,126,127,128,129,130,131,132,133,134,140,141,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,166,167,168,169,170,171,172,173,174,177,178,],[-74,-59,-73,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,-59,-66,-73,62,-69,-59,-59,-59,-48,-65,-72,-59,-59,-70,-71,-47,-46,-43,-63,-59,-39,-40,-59,-44,-45,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-37,-59,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-59,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,-59,]),'DIV':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,38,45,46,47,48,53,54,59,79,80,81,82,88,89,105,109,112,113,114,115,117,118,126,127,128,129,130,131,132,133,134,140,141,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,166,167,168,169,170,171,172,173,174,177,178,],[-74,-59,-73,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,-59,-66,-73,63,-69,-59,-59,-59,-48,-65,-72,-59,-59,-70,-71,-47,-46,-43,-63,-59,-39,-40,-59,-44,-45,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-37,-59,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-59,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,-59,]),'EQUAL':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,38,45,46,47,48,53,54,59,79,80,81,82,88,89,105,109,112,113,114,115,117,118,126,127,128,129,130,131,132,133,134,140,141,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,166,167,168,169,170,171,172,173,174,177,178,],[-74,-59,-73,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,-59,-66,-73,64,-69,-59,-59,-59,-48,-65,-72,-59,-59,-70,-71,-47,-46,-43,-63,-59,-39,-40,-59,-44,-45,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-37,-59,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-59,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,-59,]),'LOWER_EQUAL':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,38,45,46,47,48,53,54,59,79,80,81,82,88,89,105,109,112,113,114,115,117,118,126,127,128,129,130,131,132,133,134,140,141,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,166,167,168,169,170,171,172,173,174,177,178,],[-74,-59,-73,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,-59,-66,-73,65,-69,-59,-59,-59,-48,-65,-72,-59,-59,-70,-71,-47,-46,-43,-63,-59,-39,-40,-59,-44,-45,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-37,-59,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-59,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,-59,]),'LOWER':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,38,45,46,47,48,53,54,59,79,80,81,82,88,89,105,109,112,113,114,115,117,118,126,127,128,129,130,131,132,133,134,140,141,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,166,167,168,169,170,171,172,173,174,177,178,],[-74,-59,-73,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,-59,-66,-73,66,-69,-59,-59,-59,-48,-65,-72,-59,-59,-70,-71,-47,-46,-43,-63,-59,-39,-40,-59,-44,-45,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-37,-59,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-59,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,-59,]),'POW':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,38,45,46,47,48,53,54,59,79,80,81,82,88,89,105,109,112,113,114,115,117,118,126,127,128,129,130,131,132,133,134,140,141,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,166,167,168,169,170,171,172,173,174,177,178,],[-74,-59,-73,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,-59,-66,-73,67,-69,-59,-59,-59,-48,-65,-72,-59,-59,-70,-71,-47,-46,-43,-63,-59,-39,-40,-59,-44,-45,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-37,-59,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-59,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,-59,]),'AND':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,38,45,46,47,48,53,54,59,79,80,81,82,88,89,105,109,112,113,114,115,117,118,126,127,128,129,130,131,132,133,134,140,141,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,166,167,168,169,170,171,172,173,174,177,178,],[-74,-59,-73,-66,-67,-68,-79,-80,-81,-83,-82,-84,-85,-59,-66,-73,68,-69,-59,-59,-59,-48,-65,-72,-59,-59,-70,-71,-47,-46,-43,-63,-59,-39,-40,-59,-44,-45,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-37,-59,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-59,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,-59,]),'RPAR':([7,13,21,22,24,25,26,27,28,29,30,35,36,37,43,45,46,53,54,59,71,72,73,74,75,77,78,79,81,82,88,89,102,105,107,108,109,113,114,117,118,126,127,128,129,130,131,132,133,134,135,140,141,146,147,148,149,150,151,152,153,154,155,157,159,161,162,163,166,167,168,169,170,171,172,173,174,177,],[-74,45,-67,-68,-79,-80,-81,-83,-82,-84,-85,59,-66,-73,-78,-69,81,-48,-65,-72,-22,-23,-24,-25,-26,-29,109,-77,-70,-71,-47,-46,-78,-43,138,-27,-63,-39,-40,-44,-45,-60,-60,-60,-60,-60,-60,-60,-60,-60,155,-76,-37,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-30,-28,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,]),'THEN':([7,21,22,24,25,26,27,28,29,30,36,37,45,47,53,54,59,80,81,82,88,89,105,109,113,114,117,118,126,127,128,129,130,131,132,133,134,141,146,147,148,149,150,151,152,153,154,155,161,162,163,166,167,168,169,170,171,172,173,174,177,],[-74,-67,-68,-79,-80,-81,-83,-82,-84,-85,-66,-73,-69,83,-48,-65,-72,111,-70,-71,-47,-46,-43,-63,-39,-40,-44,-45,-60,-60,-60,-60,-60,-60,-60,-60,-60,-37,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,]),'DO':([7,21,22,24,25,26,27,28,29,30,36,37,45,48,53,54,59,81,82,88,89,105,109,113,114,117,118,126,127,128,129,130,131,132,133,134,141,146,147,148,149,150,151,152,153,154,155,161,162,163,166,167,168,169,170,171,172,173,174,177,],[-74,-67,-68,-79,-80,-81,-83,-82,-84,-85,-66,-73,-69,84,-48,-65,-72,-70,-71,-47,-46,-43,-63,-39,-40,-44,-45,-60,-60,-60,-60,-60,-60,-60,-60,-60,-37,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,]),'COMMA':([7,21,22,24,25,26,27,28,29,30,36,37,43,45,53,54,59,71,72,73,74,75,77,78,79,81,82,88,89,102,105,107,108,109,113,114,117,118,126,127,128,129,130,131,132,133,134,135,140,141,146,147,148,149,150,151,152,153,154,155,157,159,161,162,163,166,167,168,169,170,171,172,173,174,177,],[-74,-67,-68,-79,-80,-81,-83,-82,-84,-85,-66,-73,-78,-69,-48,-65,-72,-22,-23,-24,-25,-26,-29,110,-77,-70,-71,-47,-46,-78,-43,139,-27,-63,-39,-40,-44,-45,-60,-60,-60,-60,-60,-60,-60,-60,-60,110,-76,-37,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-30,-28,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,]),'SEMICOLON':([7,21,22,23,24,25,26,27,28,29,30,36,37,45,53,54,55,59,70,71,72,73,74,75,81,82,88,89,90,105,109,112,113,114,117,118,119,126,127,128,129,130,131,132,133,134,141,144,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,165,166,167,168,169,170,171,172,173,174,177,178,],[-74,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-66,-73,-69,-48,-65,-32,-72,103,-22,-23,-24,-25,-26,-70,-71,-47,-46,-21,-43,-63,142,-39,-40,-44,-45,-35,-60,-60,-60,-60,-60,-60,-60,-60,-60,-37,164,-34,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,175,-75,-41,-31,-36,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,-33,]),'IN':([7,21,22,24,25,26,27,28,29,30,36,37,45,49,53,54,59,71,72,73,74,75,81,82,88,89,105,109,113,114,115,116,117,118,126,127,128,129,130,131,132,133,134,141,146,147,148,149,150,151,152,153,154,155,161,162,163,166,167,168,169,170,171,172,173,174,177,],[-74,-67,-68,-79,-80,-81,-83,-82,-84,-85,-66,-73,-69,85,-48,-65,-72,-22,-23,-24,-25,-26,-70,-71,-47,-46,-43,-63,-39,-40,143,-42,-44,-45,-60,-60,-60,-60,-60,-60,-60,-60,-60,-37,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,]),'ELSE':([7,21,22,24,25,26,27,28,29,30,36,37,45,53,54,59,81,82,88,89,105,109,113,114,117,118,126,127,128,129,130,131,132,133,134,141,146,147,148,149,150,151,152,153,154,155,161,162,163,166,167,168,169,170,171,172,173,174,177,],[-74,-67,-68,-79,-80,-81,-83,-82,-84,-85,-66,-73,-69,-48,-65,-72,-70,-71,-47,-46,-43,-63,-39,-40,-44,-45,-60,-60,-60,-60,-60,-60,-60,-60,-60,160,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-75,-41,-31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-38,]),'RBRACE':([7,21,22,23,24,25,26,27,28,29,30,36,37,45,53,54,55,58,59,81,82,88,89,90,92,103,105,109,113,114,117,118,119,123,124,126,127,128,129,130,131,132,133,134,141,144,145,146,147,148,149,150,151,152,153,154,155,161,162,163,165,166,167,168,169,170,171,172,173,174,175,177,178,179,],[-74,-67,-68,-58,-79,-80,-81,-83,-82,-84,-85,-66,-73,-69,-48,-65,-32,-17,-72,-70,-71,-47,-46,-21,121,-18,-43,-63,-39,-40,-44,-45,-35,-15,-16,-60,-60,-60,-60,-60,-60,-60,-60,-60,-37,163,-34,-61,-61,-61,-61,-62,-62,-62,-61,-62,-64,-75,-41,-31,-36,-49,-50,-51,-52,-53,-54,-55,-56,-57,-19,-38,-33,-20,]),'COLON':([11,50,106,125,138,],[40,87,137,40,158,]),'ASSIGN':([11,36,49,70,71,72,73,74,75,116,],[41,41,86,104,-22,-23,-24,-25,-26,-42,]),'EXTENDS':([33,34,],[57,-12,]),'INT32':([40,87,137,158,],[72,72,72,72,]),'BOOL':([40,87,137,158,],[73,73,73,73,]),'STRING':([40,87,137,158,],[74,74,74,74,]),'UNIT':([40,87,137,158,],[75,75,75,75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'program':([0,],[2,]),'class':([0,2,],[3,31,]),'field':([0,2,92,],[4,4,123,]),'method':([0,2,92,],[5,5,124,]),'expression':([0,2,7,13,14,15,19,43,44,51,52,76,83,84,85,86,93,94,95,96,97,98,99,100,101,102,110,111,119,136,143,160,164,],[8,8,35,46,47,48,53,79,80,88,89,105,112,113,114,115,126,127,128,129,130,131,132,133,134,79,140,141,145,156,162,177,178,]),'block':([0,2,7,13,14,15,19,43,44,51,52,76,83,84,85,86,93,94,95,96,97,98,99,100,101,102,110,111,119,136,143,160,164,176,],[10,10,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,179,]),'new_variables_scope':([0,2,7,11,13,14,15,19,43,44,51,52,76,83,84,85,86,90,93,94,95,96,97,98,99,100,101,102,110,111,119,125,136,143,160,164,],[12,12,12,42,12,12,12,12,12,12,12,12,12,12,12,12,12,119,12,12,12,12,12,12,12,12,12,12,12,12,12,42,12,12,12,12,]),'literal':([0,2,7,13,14,15,19,43,44,51,52,76,83,84,85,86,93,94,95,96,97,98,99,100,101,102,110,111,119,136,143,160,164,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'literal_integer':([0,2,7,13,14,15,19,43,44,51,52,76,83,84,85,86,93,94,95,96,97,98,99,100,101,102,110,111,119,136,143,160,164,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'literal_string':([0,2,7,13,14,15,19,43,44,51,52,76,83,84,85,86,93,94,95,96,97,98,99,100,101,102,110,111,119,136,143,160,164,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'boolean-literal':([0,2,7,13,14,15,19,43,44,51,52,76,83,84,85,86,93,94,95,96,97,98,99,100,101,102,110,111,119,136,143,160,164,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'new_class_scope':([6,],[33,]),'store_left':([8,35,46,47,48,53,79,80,88,89,105,112,113,114,115,126,127,128,129,130,131,132,133,134,140,141,145,156,162,177,178,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'let_type':([16,],[49,]),'get_type':([17,18,23,41,60,61,62,63,64,65,66,67,68,104,],[51,52,55,76,93,94,95,96,97,98,99,100,101,136,]),'class-body':([33,91,],[56,120,]),'type':([40,87,137,158,],[70,116,157,176,]),'args':([43,102,],[78,135,]),'check_block':([55,],[90,]),'class-body-in':([58,],[92,]),'formals':([77,],[107,]),'formal':([77,139,],[108,159,]),'check_bool':([88,],[117,]),'check_int':([89,],[118,]),'inblock':([119,],[144,]),'store_right':([126,127,128,129,130,131,132,133,134,],[146,147,148,149,150,151,152,153,154,]),'check_int2':([146,147,148,149,153,],[166,167,168,169,173,]),'check_bool2':([150,151,152,154,],[170,171,172,174,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> program','init',1,'p_init','semanticsFile.py',102),
  ('program -> program class','program',2,'p_program','semanticsFile.py',106),
  ('program -> class','program',1,'p_program','semanticsFile.py',107),
  ('class -> field','class',1,'p_field_method_error','semanticsFile.py',114),
  ('class -> method','class',1,'p_field_method_error','semanticsFile.py',115),
  ('class -> CLASS error','class',2,'p_class_error','semanticsFile.py',121),
  ('class -> expression','class',1,'p_general_class_error','semanticsFile.py',126),
  ('class -> TYPE_IDENTIFIER','class',1,'p_general_class_error','semanticsFile.py',127),
  ('class -> block','class',1,'p_general_class_error','semanticsFile.py',128),
  ('class -> CLASS new_class_scope class-body','class',3,'p_class','semanticsFile.py',134),
  ('class -> CLASS new_class_scope EXTENDS TYPE_IDENTIFIER class-body','class',5,'p_class','semanticsFile.py',135),
  ('new_class_scope -> TYPE_IDENTIFIER','new_class_scope',1,'p_new_class_scope','semanticsFile.py',147),
  ('class-body -> LBRACE class-body-in RBRACE','class-body',3,'p_class_body','semanticsFile.py',155),
  ('class-body -> LBRACE class-body-in error','class-body',3,'p_class_braces_error','semanticsFile.py',159),
  ('class-body-in -> class-body-in field','class-body-in',2,'p_class_body_field','semanticsFile.py',164),
  ('class-body-in -> class-body-in method','class-body-in',2,'p_class_body_method','semanticsFile.py',169),
  ('class-body-in -> <empty>','class-body-in',0,'p_class_body_empty','semanticsFile.py',174),
  ('field -> OBJECT_IDENTIFIER COLON type SEMICOLON','field',4,'p_field','semanticsFile.py',178),
  ('field -> OBJECT_IDENTIFIER COLON type ASSIGN get_type expression SEMICOLON','field',7,'p_field','semanticsFile.py',179),
  ('method -> OBJECT_IDENTIFIER new_variables_scope LPAR formals RPAR COLON type block','method',8,'p_method','semanticsFile.py',188),
  ('new_variables_scope -> <empty>','new_variables_scope',0,'p_new_variables_scope','semanticsFile.py',193),
  ('type -> TYPE_IDENTIFIER','type',1,'p_type','semanticsFile.py',199),
  ('type -> INT32','type',1,'p_type','semanticsFile.py',200),
  ('type -> BOOL','type',1,'p_type','semanticsFile.py',201),
  ('type -> STRING','type',1,'p_type','semanticsFile.py',202),
  ('type -> UNIT','type',1,'p_type','semanticsFile.py',203),
  ('formals -> formal','formals',1,'p_formals','semanticsFile.py',207),
  ('formals -> formals COMMA formal','formals',3,'p_formals','semanticsFile.py',208),
  ('formals -> <empty>','formals',0,'p_formals','semanticsFile.py',209),
  ('formal -> OBJECT_IDENTIFIER COLON type','formal',3,'p_formal','semanticsFile.py',218),
  ('block -> LBRACE get_type check_block new_variables_scope inblock RBRACE','block',6,'p_block','semanticsFile.py',223),
  ('check_block -> <empty>','check_block',0,'p_check_block','semanticsFile.py',229),
  ('inblock -> inblock SEMICOLON expression','inblock',3,'p_block_inside','semanticsFile.py',234),
  ('inblock -> expression','inblock',1,'p_block_inside','semanticsFile.py',235),
  ('inblock -> <empty>','inblock',0,'p_block_inside','semanticsFile.py',236),
  ('inblock -> inblock error','inblock',2,'p_block_error','semanticsFile.py',245),
  ('expression -> new_variables_scope IF expression THEN expression','expression',5,'p_if','semanticsFile.py',250),
  ('expression -> new_variables_scope IF expression THEN expression ELSE expression','expression',7,'p_if','semanticsFile.py',251),
  ('expression -> WHILE expression DO expression','expression',4,'p_while','semanticsFile.py',258),
  ('expression -> LET let_type IN expression','expression',4,'p_let','semanticsFile.py',262),
  ('expression -> LET let_type ASSIGN expression IN expression','expression',6,'p_let','semanticsFile.py',263),
  ('let_type -> OBJECT_IDENTIFIER COLON type','let_type',3,'p_let_type','semanticsFile.py',270),
  ('expression -> OBJECT_IDENTIFIER ASSIGN get_type expression','expression',4,'p_assign','semanticsFile.py',276),
  ('expression -> NOT get_type expression check_bool','expression',4,'p_unary_operators','semanticsFile.py',281),
  ('expression -> MINUS get_type expression check_int','expression',4,'p_unary_operators','semanticsFile.py',282),
  ('check_int -> <empty>','check_int',0,'p_check_int','semanticsFile.py',286),
  ('check_bool -> <empty>','check_bool',0,'p_check_bool','semanticsFile.py',295),
  ('expression -> ISNULL expression','expression',2,'p_unary_isnull','semanticsFile.py',304),
  ('expression -> expression store_left PLUS get_type expression store_right check_int2','expression',7,'p_binary_operators','semanticsFile.py',308),
  ('expression -> expression store_left MINUS get_type expression store_right check_int2','expression',7,'p_binary_operators','semanticsFile.py',309),
  ('expression -> expression store_left TIMES get_type expression store_right check_int2','expression',7,'p_binary_operators','semanticsFile.py',310),
  ('expression -> expression store_left DIV get_type expression store_right check_int2','expression',7,'p_binary_operators','semanticsFile.py',311),
  ('expression -> expression store_left EQUAL get_type expression store_right check_bool2','expression',7,'p_binary_operators','semanticsFile.py',312),
  ('expression -> expression store_left LOWER_EQUAL get_type expression store_right check_bool2','expression',7,'p_binary_operators','semanticsFile.py',313),
  ('expression -> expression store_left LOWER get_type expression store_right check_bool2','expression',7,'p_binary_operators','semanticsFile.py',314),
  ('expression -> expression store_left POW get_type expression store_right check_int2','expression',7,'p_binary_operators','semanticsFile.py',315),
  ('expression -> expression store_left AND get_type expression store_right check_bool2','expression',7,'p_binary_operators','semanticsFile.py',316),
  ('get_type -> <empty>','get_type',0,'p_get_type','semanticsFile.py',320),
  ('store_left -> <empty>','store_left',0,'p_store_left','semanticsFile.py',325),
  ('store_right -> <empty>','store_right',0,'p_store_right','semanticsFile.py',330),
  ('check_int2 -> <empty>','check_int2',0,'p_check_int2','semanticsFile.py',335),
  ('check_bool2 -> <empty>','check_bool2',0,'p_check_bool2','semanticsFile.py',346),
  ('expression -> OBJECT_IDENTIFIER LPAR args RPAR','expression',4,'p_object_call','semanticsFile.py',357),
  ('expression -> expression DOT OBJECT_IDENTIFIER LPAR args RPAR','expression',6,'p_object_call','semanticsFile.py',358),
  ('expression -> NEW TYPE_IDENTIFIER','expression',2,'p_new_type','semanticsFile.py',365),
  ('expression -> OBJECT_IDENTIFIER','expression',1,'p_expression_object','semanticsFile.py',369),
  ('expression -> SELF','expression',1,'p_expression_self','semanticsFile.py',381),
  ('expression -> literal','expression',1,'p_expression_literal','semanticsFile.py',385),
  ('expression -> LPAR RPAR','expression',2,'p_par_alone','semanticsFile.py',389),
  ('expression -> LPAR expression RPAR','expression',3,'p_par_expression','semanticsFile.py',393),
  ('expression -> LPAR expression error','expression',3,'p_par_error','semanticsFile.py',397),
  ('expression -> error expression RPAR','expression',3,'p_par_error','semanticsFile.py',398),
  ('expression -> block','expression',1,'p_expression_block','semanticsFile.py',403),
  ('expression -> error','expression',1,'p_expression_error','semanticsFile.py',407),
  ('expression -> IF expression THEN expression SEMICOLON error','expression',6,'p_expression_error','semanticsFile.py',408),
  ('args -> args COMMA expression','args',3,'p_args','semanticsFile.py',416),
  ('args -> expression','args',1,'p_args','semanticsFile.py',417),
  ('args -> <empty>','args',0,'p_args','semanticsFile.py',418),
  ('literal -> literal_integer','literal',1,'p_literal','semanticsFile.py',427),
  ('literal -> literal_string','literal',1,'p_literal','semanticsFile.py',428),
  ('literal -> boolean-literal','literal',1,'p_literal','semanticsFile.py',429),
  ('literal_string -> string_literal','literal_string',1,'p_literal_string','semanticsFile.py',433),
  ('literal_integer -> INTEGER_LITERAL','literal_integer',1,'p_literal_integer','semanticsFile.py',440),
  ('boolean-literal -> TRUE','boolean-literal',1,'p_boolean_literal','semanticsFile.py',447),
  ('boolean-literal -> FALSE','boolean-literal',1,'p_boolean_literal','semanticsFile.py',448),
]
