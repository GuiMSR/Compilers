
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initrightASSIGNleftANDrightNOTnonassocLOWEREQUALLOWER_EQUALleftPLUSMINUSleftTIMESDIVrightISNULLUMINUSrightPOWleftDOTAND ASSIGN BOOL CLASS COLON COMMA DIV DO DOT ELSE EQUAL EXTENDS FALSE IF IN INT32 INTEGER_LITERAL ISNULL LBRACE LET LOWER LOWER_EQUAL LPAR MINUS NEW NOT OBJECT_IDENTIFIER PLUS POW RBRACE RPAR SELF SEMICOLON STRING THEN TIMES TRUE TYPE_IDENTIFIER UNIT WHILE string_literalinit : programprogram : program class\n                    | classclass : field\n                | methodclass : CLASS errorclass : expression\n                | TYPE_IDENTIFIER\n                | blockclass : CLASS new_class_scope class-body\n                | CLASS new_class_scope EXTENDS TYPE_IDENTIFIER class-bodynew_class_scope : TYPE_IDENTIFIERclass-body : LBRACE class-body-in RBRACEclass-body : LBRACE class-body-in errorclass-body-in : class-body-in fieldclass-body-in : class-body-in methodclass-body-in : field : field_identifier SEMICOLON\n                | field_identifier ASSIGN expression SEMICOLONfield_identifier : OBJECT_IDENTIFIER COLON typemethod : method_identifier LPAR formals RPAR COLON type blockmethod_identifier : OBJECT_IDENTIFIERtype : TYPE_IDENTIFIER\n                | INT32\n                | BOOL\n                | STRING\n                | UNIT formals : formal\n                | formals COMMA formal\n                | formal : OBJECT_IDENTIFIER COLON typeblock : block_lbrace inblock RBRACEblock_lbrace : LBRACEinblock : inblock SEMICOLON expression\n                | expression\n                |inblock : inblock error expression : IF expression THEN expression\n                    | IF expression THEN expression ELSE expressionexpression : WHILE expression DO expressionexpression : LET let_type let_in expression\n                    | LET let_type ASSIGN expression let_in expressionlet_type : OBJECT_IDENTIFIER COLON typelet_in : INexpression : OBJECT_IDENTIFIER ASSIGN expressionexpression : NOT expressionexpression : MINUS expression %prec UMINUSexpression : ISNULL expressionexpression : expression EQUAL expressionexpression : expression AND expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIV expression\n                  | expression POW expressionexpression : expression LOWER_EQUAL expression\n                    | expression LOWER expressionexpression : call_identifier LPAR args RPAR\n                    | expression DOT call_identifier LPAR args RPARcall_identifier : OBJECT_IDENTIFIERexpression : NEW TYPE_IDENTIFIERexpression : OBJECT_IDENTIFIERexpression : SELFexpression : literalexpression : LPAR RPARexpression : LPAR expression RPARexpression : LPAR expression error\n                    | error expression RPARexpression : blockexpression : errorargs : args COMMA expression\n                | expression\n                |literal : string_literalliteral : INTEGER_LITERALliteral : TRUE \n                    | FALSE'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,7,8,9,10,17,23,24,26,27,28,29,31,32,36,37,48,51,59,60,61,63,66,69,70,71,72,73,74,75,76,77,78,85,86,93,102,108,112,113,114,117,120,121,122,133,135,136,137,],[6,6,-3,-4,-5,-70,-7,-8,-9,-62,-63,-64,-74,-75,-76,-77,-2,-6,-62,-69,-18,-65,-46,-47,-48,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,-45,-32,-19,-38,-40,-41,-58,-11,-13,-14,-59,-39,-42,-21,]),'TYPE_IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,17,22,23,24,26,27,28,29,31,32,36,37,48,51,58,59,60,61,63,66,67,69,70,71,72,73,74,75,76,77,78,85,86,92,93,102,108,111,112,113,114,117,120,121,122,127,133,135,136,137,],[9,9,-3,-4,-5,34,-70,-7,-8,-9,-62,63,-63,-64,-74,-75,-76,-77,-2,-6,-62,-69,-18,-65,95,-46,-47,-48,-61,-10,105,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,95,-45,-32,-19,95,-38,-40,-41,-58,-11,-13,-14,95,-59,-39,-42,-21,]),'IF':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[14,14,-3,-4,-5,14,-7,-8,-9,14,14,14,-62,14,14,14,-63,-64,14,-74,-75,-76,-77,-33,-2,-6,-62,-69,14,14,14,14,14,14,14,14,14,-18,14,-65,14,-46,-47,-48,14,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,14,14,14,14,-44,-45,-32,14,14,-19,-38,-40,-41,-58,14,-11,-13,-14,14,14,-59,-39,-42,-21,]),'WHILE':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[15,15,-3,-4,-5,15,-7,-8,-9,15,15,15,-62,15,15,15,-63,-64,15,-74,-75,-76,-77,-33,-2,-6,-62,-69,15,15,15,15,15,15,15,15,15,-18,15,-65,15,-46,-47,-48,15,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,15,15,15,15,-44,-45,-32,15,15,-19,-38,-40,-41,-58,15,-11,-13,-14,15,15,-59,-39,-42,-21,]),'LET':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[16,16,-3,-4,-5,16,-7,-8,-9,16,16,16,-62,16,16,16,-63,-64,16,-74,-75,-76,-77,-33,-2,-6,-62,-69,16,16,16,16,16,16,16,16,16,-18,16,-65,16,-46,-47,-48,16,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,16,16,16,16,-44,-45,-32,16,16,-19,-38,-40,-41,-58,16,-11,-13,-14,16,16,-59,-39,-42,-21,]),'OBJECT_IDENTIFIER':([0,2,3,4,5,7,8,9,10,13,14,15,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,59,60,61,62,63,66,68,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,106,107,108,110,112,113,114,117,118,120,121,122,123,124,130,131,133,135,136,137,],[17,17,-3,-4,-5,36,-7,-8,-9,36,36,36,56,-62,36,36,36,-63,-64,36,-74,-75,-76,-77,-33,-2,-6,-62,-69,36,36,36,36,36,36,36,36,36,80,-18,36,84,-65,36,-46,-47,-48,36,-61,-10,-17,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,36,36,36,36,-44,-45,-32,36,125,36,-19,84,-38,-40,-41,-58,36,-11,-13,-14,-15,-16,36,36,-59,-39,-42,-21,]),'NOT':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[18,18,-3,-4,-5,18,-7,-8,-9,18,18,18,-62,18,18,18,-63,-64,18,-74,-75,-76,-77,-33,-2,-6,-62,-69,18,18,18,18,18,18,18,18,18,-18,18,-65,18,-46,-47,-48,18,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,18,18,18,18,-44,-45,-32,18,18,-19,-38,-40,-41,-58,18,-11,-13,-14,18,18,-59,-39,-42,-21,]),'MINUS':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,57,59,60,61,62,63,65,66,69,70,71,72,73,74,75,76,77,78,81,85,86,87,88,89,90,91,93,101,102,103,107,108,112,113,114,115,117,118,119,120,121,122,130,131,132,133,135,136,137,],[19,19,-3,-4,-5,19,41,-8,-9,19,19,19,-62,19,19,19,-63,-64,19,-74,-75,-76,-77,-33,-2,-6,41,-62,-69,19,19,19,19,19,19,19,19,19,-18,19,-65,41,41,41,19,41,-47,-48,19,-61,41,-10,-68,41,41,-51,-52,-53,-54,-55,41,41,41,-66,-67,19,19,19,19,-44,41,41,-32,19,19,-19,41,41,41,41,-58,19,41,-11,-13,-14,19,19,41,-59,41,41,-21,]),'ISNULL':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[20,20,-3,-4,-5,20,-7,-8,-9,20,20,20,-62,20,20,20,-63,-64,20,-74,-75,-76,-77,-33,-2,-6,-62,-69,20,20,20,20,20,20,20,20,20,-18,20,-65,20,-46,-47,-48,20,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,20,20,20,20,-44,-45,-32,20,20,-19,-38,-40,-41,-58,20,-11,-13,-14,20,20,-59,-39,-42,-21,]),'NEW':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[22,22,-3,-4,-5,22,-7,-8,-9,22,22,22,-62,22,22,22,-63,-64,22,-74,-75,-76,-77,-33,-2,-6,-62,-69,22,22,22,22,22,22,22,22,22,-18,22,-65,22,-46,-47,-48,22,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,22,22,22,22,-44,-45,-32,22,22,-19,-38,-40,-41,-58,22,-11,-13,-14,22,22,-59,-39,-42,-21,]),'SELF':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[23,23,-3,-4,-5,23,-7,-8,-9,23,23,23,-62,23,23,23,-63,-64,23,-74,-75,-76,-77,-33,-2,-6,-62,-69,23,23,23,23,23,23,23,23,23,-18,23,-65,23,-46,-47,-48,23,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,23,23,23,23,-44,-45,-32,23,23,-19,-38,-40,-41,-58,23,-11,-13,-14,23,23,-59,-39,-42,-21,]),'LPAR':([0,2,3,4,5,7,8,9,10,12,13,14,15,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,79,80,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,125,130,131,133,135,136,137,],[13,13,-3,-4,-5,13,-7,-8,-9,50,13,13,13,-22,13,13,13,62,-63,-64,13,-74,-75,-76,-77,-33,-2,-6,-60,-69,13,13,13,13,13,13,13,13,13,-18,13,-65,13,-46,-47,-48,13,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,107,-60,-66,-67,13,13,13,13,-44,-45,-32,13,13,-19,-38,-40,-41,-58,13,-11,-13,-14,-22,13,13,-59,-39,-42,-21,]),'error':([0,2,3,4,5,6,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,57,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,104,106,107,108,112,113,114,117,118,119,120,121,122,123,124,130,131,133,135,136,137,],[7,7,-3,-4,-5,32,7,-7,-8,-9,7,7,7,-62,7,7,7,-63,-64,7,-74,-75,-76,-77,-33,-2,-6,-62,-69,7,7,7,7,7,7,7,7,7,-18,7,-65,86,7,-46,-47,-48,7,-61,104,-35,-10,-17,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,7,7,7,7,-44,-45,-32,7,-37,122,7,-19,-38,-40,-41,-58,7,-34,-11,-13,-14,-15,-16,7,7,-59,-39,-42,-21,]),'string_literal':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[26,26,-3,-4,-5,26,-7,-8,-9,26,26,26,-62,26,26,26,-63,-64,26,-74,-75,-76,-77,-33,-2,-6,-62,-69,26,26,26,26,26,26,26,26,26,-18,26,-65,26,-46,-47,-48,26,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,26,26,26,26,-44,-45,-32,26,26,-19,-38,-40,-41,-58,26,-11,-13,-14,26,26,-59,-39,-42,-21,]),'INTEGER_LITERAL':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[27,27,-3,-4,-5,27,-7,-8,-9,27,27,27,-62,27,27,27,-63,-64,27,-74,-75,-76,-77,-33,-2,-6,-62,-69,27,27,27,27,27,27,27,27,27,-18,27,-65,27,-46,-47,-48,27,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,27,27,27,27,-44,-45,-32,27,27,-19,-38,-40,-41,-58,27,-11,-13,-14,27,27,-59,-39,-42,-21,]),'TRUE':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[28,28,-3,-4,-5,28,-7,-8,-9,28,28,28,-62,28,28,28,-63,-64,28,-74,-75,-76,-77,-33,-2,-6,-62,-69,28,28,28,28,28,28,28,28,28,-18,28,-65,28,-46,-47,-48,28,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,28,28,28,28,-44,-45,-32,28,28,-19,-38,-40,-41,-58,28,-11,-13,-14,28,28,-59,-39,-42,-21,]),'FALSE':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,102,103,107,108,112,113,114,117,118,120,121,122,130,131,133,135,136,137,],[29,29,-3,-4,-5,29,-7,-8,-9,29,29,29,-62,29,29,29,-63,-64,29,-74,-75,-76,-77,-33,-2,-6,-62,-69,29,29,29,29,29,29,29,29,29,-18,29,-65,29,-46,-47,-48,29,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,29,29,29,29,-44,-45,-32,29,29,-19,-38,-40,-41,-58,29,-11,-13,-14,29,29,-59,-39,-42,-21,]),'LBRACE':([0,2,3,4,5,7,8,9,10,13,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,57,59,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,93,95,96,97,98,99,102,103,105,107,108,112,113,114,117,118,120,121,122,130,131,133,134,135,136,137,],[30,30,-3,-4,-5,30,-7,-8,-9,30,30,30,-62,30,30,30,-63,-64,30,-74,-75,-76,-77,-33,-2,-6,68,-12,-62,-69,30,30,30,30,30,30,30,30,30,-18,30,-65,30,-46,-47,-48,30,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,30,30,30,30,-44,-45,-23,-24,-25,-26,-27,-32,30,68,30,-19,-38,-40,-41,-58,30,-11,-13,-14,30,30,-59,30,-39,-42,-21,]),'$end':([1,2,3,4,5,7,8,9,10,17,23,24,26,27,28,29,31,32,36,37,48,51,59,60,61,63,66,69,70,71,72,73,74,75,76,77,78,85,86,93,102,108,112,113,114,117,120,121,122,133,135,136,137,],[0,-1,-3,-4,-5,-70,-7,-8,-9,-62,-63,-64,-74,-75,-76,-77,-2,-6,-62,-69,-18,-65,-46,-47,-48,-61,-10,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,-45,-32,-19,-38,-40,-41,-58,-11,-13,-14,-59,-39,-42,-21,]),'EQUAL':([7,8,10,17,23,24,26,27,28,29,35,36,37,51,52,53,54,59,60,61,63,65,69,70,71,72,73,74,75,76,77,78,81,85,86,93,101,102,112,113,114,115,117,119,132,133,135,136,],[-70,38,-69,-62,-63,-64,-74,-75,-76,-77,38,-62,-69,-65,38,38,38,38,-47,-48,-61,38,-68,None,38,-51,-52,-53,-54,-55,None,None,38,-66,-67,38,38,-32,38,38,38,38,-58,38,38,-59,38,38,]),'AND':([7,8,10,17,23,24,26,27,28,29,35,36,37,51,52,53,54,59,60,61,63,65,69,70,71,72,73,74,75,76,77,78,81,85,86,93,101,102,112,113,114,115,117,119,132,133,135,136,],[-70,39,-69,-62,-63,-64,-74,-75,-76,-77,39,-62,-69,-65,39,39,39,-46,-47,-48,-61,39,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,39,-66,-67,39,39,-32,39,39,39,39,-58,39,39,-59,39,39,]),'PLUS':([7,8,10,17,23,24,26,27,28,29,35,36,37,51,52,53,54,59,60,61,63,65,69,70,71,72,73,74,75,76,77,78,81,85,86,93,101,102,112,113,114,115,117,119,132,133,135,136,],[-70,40,-69,-62,-63,-64,-74,-75,-76,-77,40,-62,-69,-65,40,40,40,40,-47,-48,-61,40,-68,40,40,-51,-52,-53,-54,-55,40,40,40,-66,-67,40,40,-32,40,40,40,40,-58,40,40,-59,40,40,]),'TIMES':([7,8,10,17,23,24,26,27,28,29,35,36,37,51,52,53,54,59,60,61,63,65,69,70,71,72,73,74,75,76,77,78,81,85,86,93,101,102,112,113,114,115,117,119,132,133,135,136,],[-70,42,-69,-62,-63,-64,-74,-75,-76,-77,42,-62,-69,-65,42,42,42,42,-47,-48,-61,42,-68,42,42,42,42,-53,-54,-55,42,42,42,-66,-67,42,42,-32,42,42,42,42,-58,42,42,-59,42,42,]),'DIV':([7,8,10,17,23,24,26,27,28,29,35,36,37,51,52,53,54,59,60,61,63,65,69,70,71,72,73,74,75,76,77,78,81,85,86,93,101,102,112,113,114,115,117,119,132,133,135,136,],[-70,43,-69,-62,-63,-64,-74,-75,-76,-77,43,-62,-69,-65,43,43,43,43,-47,-48,-61,43,-68,43,43,43,43,-53,-54,-55,43,43,43,-66,-67,43,43,-32,43,43,43,43,-58,43,43,-59,43,43,]),'POW':([7,8,10,17,23,24,26,27,28,29,35,36,37,51,52,53,54,59,60,61,63,65,69,70,71,72,73,74,75,76,77,78,81,85,86,93,101,102,112,113,114,115,117,119,132,133,135,136,],[-70,44,-69,-62,-63,-64,-74,-75,-76,-77,44,-62,-69,-65,44,44,44,44,44,44,-61,44,-68,44,44,44,44,44,44,44,44,44,44,-66,-67,44,44,-32,44,44,44,44,-58,44,44,-59,44,44,]),'LOWER_EQUAL':([7,8,10,17,23,24,26,27,28,29,35,36,37,51,52,53,54,59,60,61,63,65,69,70,71,72,73,74,75,76,77,78,81,85,86,93,101,102,112,113,114,115,117,119,132,133,135,136,],[-70,45,-69,-62,-63,-64,-74,-75,-76,-77,45,-62,-69,-65,45,45,45,45,-47,-48,-61,45,-68,None,45,-51,-52,-53,-54,-55,None,None,45,-66,-67,45,45,-32,45,45,45,45,-58,45,45,-59,45,45,]),'LOWER':([7,8,10,17,23,24,26,27,28,29,35,36,37,51,52,53,54,59,60,61,63,65,69,70,71,72,73,74,75,76,77,78,81,85,86,93,101,102,112,113,114,115,117,119,132,133,135,136,],[-70,46,-69,-62,-63,-64,-74,-75,-76,-77,46,-62,-69,-65,46,46,46,46,-47,-48,-61,46,-68,None,46,-51,-52,-53,-54,-55,None,None,46,-66,-67,46,46,-32,46,46,46,46,-58,46,46,-59,46,46,]),'DOT':([7,8,10,17,23,24,26,27,28,29,35,36,37,51,52,53,54,59,60,61,63,65,69,70,71,72,73,74,75,76,77,78,81,85,86,93,101,102,112,113,114,115,117,119,132,133,135,136,],[-70,47,-69,-62,-63,-64,-74,-75,-76,-77,47,-62,-69,-65,47,47,47,47,47,47,-61,47,-68,47,47,47,47,47,47,47,47,47,47,-66,-67,47,47,-32,47,47,47,47,-58,47,47,-59,47,47,]),'RPAR':([7,13,23,24,26,27,28,29,35,36,37,50,51,52,59,60,61,62,63,69,70,71,72,73,74,75,76,77,78,82,83,85,86,93,95,96,97,98,99,100,101,102,107,112,113,114,117,126,128,129,132,133,135,136,],[-70,51,-63,-64,-74,-75,-76,-77,69,-62,-69,-30,-65,85,-46,-47,-48,-73,-61,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,109,-28,-66,-67,-45,-23,-24,-25,-26,-27,117,-72,-32,-73,-38,-40,-41,-58,133,-29,-31,-71,-59,-39,-42,]),'THEN':([7,23,24,26,27,28,29,36,37,51,53,59,60,61,63,69,70,71,72,73,74,75,76,77,78,85,86,93,102,112,113,114,117,133,135,136,],[-70,-63,-64,-74,-75,-76,-77,-62,-69,-65,87,-46,-47,-48,-61,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,-45,-32,-38,-40,-41,-58,-59,-39,-42,]),'DO':([7,23,24,26,27,28,29,36,37,51,54,59,60,61,63,69,70,71,72,73,74,75,76,77,78,85,86,93,102,112,113,114,117,133,135,136,],[-70,-63,-64,-74,-75,-76,-77,-62,-69,-65,88,-46,-47,-48,-61,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,-45,-32,-38,-40,-41,-58,-59,-39,-42,]),'RBRACE':([7,23,24,25,26,27,28,29,30,36,37,48,51,59,60,61,63,64,65,68,69,70,71,72,73,74,75,76,77,78,85,86,93,102,104,106,108,112,113,114,117,119,123,124,133,135,136,137,],[-70,-63,-64,-36,-74,-75,-76,-77,-33,-62,-69,-18,-65,-46,-47,-48,-61,102,-35,-17,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,-45,-32,-37,121,-19,-38,-40,-41,-58,-34,-15,-16,-59,-39,-42,-21,]),'SEMICOLON':([7,11,23,24,25,26,27,28,29,30,36,37,51,59,60,61,63,64,65,69,70,71,72,73,74,75,76,77,78,81,85,86,93,94,95,96,97,98,99,102,104,112,113,114,117,119,133,135,136,],[-70,48,-63,-64,-36,-74,-75,-76,-77,-33,-62,-69,-65,-46,-47,-48,-61,103,-35,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,108,-66,-67,-45,-20,-23,-24,-25,-26,-27,-32,-37,-38,-40,-41,-58,-34,-59,-39,-42,]),'COMMA':([7,23,24,26,27,28,29,36,37,50,51,59,60,61,62,63,69,70,71,72,73,74,75,76,77,78,82,83,85,86,93,95,96,97,98,99,100,101,102,107,112,113,114,117,126,128,129,132,133,135,136,],[-70,-63,-64,-74,-75,-76,-77,-62,-69,-30,-65,-46,-47,-48,-73,-61,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,110,-28,-66,-67,-45,-23,-24,-25,-26,-27,118,-72,-32,-73,-38,-40,-41,-58,118,-29,-31,-71,-59,-39,-42,]),'ELSE':([7,23,24,26,27,28,29,36,37,51,59,60,61,63,69,70,71,72,73,74,75,76,77,78,85,86,93,102,112,113,114,117,133,135,136,],[-70,-63,-64,-74,-75,-76,-77,-62,-69,-65,-46,-47,-48,-61,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,-45,-32,130,-40,-41,-58,-59,-39,-42,]),'IN':([7,23,24,26,27,28,29,36,37,51,55,59,60,61,63,69,70,71,72,73,74,75,76,77,78,85,86,93,95,96,97,98,99,102,112,113,114,115,116,117,133,135,136,],[-70,-63,-64,-74,-75,-76,-77,-62,-69,-65,91,-46,-47,-48,-61,-68,-49,-50,-51,-52,-53,-54,-55,-56,-57,-66,-67,-45,-23,-24,-25,-26,-27,-32,-38,-40,-41,91,-43,-58,-59,-39,-42,]),'ASSIGN':([11,17,36,55,94,95,96,97,98,99,116,],[49,57,57,90,-20,-23,-24,-25,-26,-27,-43,]),'COLON':([17,56,84,109,125,],[58,92,111,127,58,]),'EXTENDS':([33,34,],[67,-12,]),'INT32':([58,92,111,127,],[96,96,96,96,]),'BOOL':([58,92,111,127,],[97,97,97,97,]),'STRING':([58,92,111,127,],[98,98,98,98,]),'UNIT':([58,92,111,127,],[99,99,99,99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'program':([0,],[2,]),'class':([0,2,],[3,31,]),'field':([0,2,106,],[4,4,123,]),'method':([0,2,106,],[5,5,124,]),'expression':([0,2,7,13,14,15,18,19,20,25,38,39,40,41,42,43,44,45,46,49,57,62,87,88,89,90,103,107,118,130,131,],[8,8,35,52,53,54,59,60,61,65,70,71,72,73,74,75,76,77,78,81,93,101,112,113,114,115,119,101,132,135,136,]),'block':([0,2,7,13,14,15,18,19,20,25,38,39,40,41,42,43,44,45,46,49,57,62,87,88,89,90,103,107,118,130,131,134,],[10,10,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,137,]),'field_identifier':([0,2,106,],[11,11,11,]),'method_identifier':([0,2,106,],[12,12,12,]),'call_identifier':([0,2,7,13,14,15,18,19,20,25,38,39,40,41,42,43,44,45,46,47,49,57,62,87,88,89,90,103,107,118,130,131,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,79,21,21,21,21,21,21,21,21,21,21,21,21,]),'literal':([0,2,7,13,14,15,18,19,20,25,38,39,40,41,42,43,44,45,46,49,57,62,87,88,89,90,103,107,118,130,131,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'block_lbrace':([0,2,7,13,14,15,18,19,20,25,38,39,40,41,42,43,44,45,46,49,57,62,87,88,89,90,103,107,118,130,131,134,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'new_class_scope':([6,],[33,]),'let_type':([16,],[55,]),'inblock':([25,],[64,]),'class-body':([33,105,],[66,120,]),'formals':([50,],[82,]),'formal':([50,110,],[83,128,]),'let_in':([55,115,],[89,131,]),'type':([58,92,111,127,],[94,116,129,134,]),'args':([62,107,],[100,126,]),'class-body-in':([68,],[106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> program','init',1,'p_init','generationFile.py',172),
  ('program -> program class','program',2,'p_program','generationFile.py',177),
  ('program -> class','program',1,'p_program','generationFile.py',178),
  ('class -> field','class',1,'p_field_method_error','generationFile.py',182),
  ('class -> method','class',1,'p_field_method_error','generationFile.py',183),
  ('class -> CLASS error','class',2,'p_class_error','generationFile.py',190),
  ('class -> expression','class',1,'p_general_class_error','generationFile.py',195),
  ('class -> TYPE_IDENTIFIER','class',1,'p_general_class_error','generationFile.py',196),
  ('class -> block','class',1,'p_general_class_error','generationFile.py',197),
  ('class -> CLASS new_class_scope class-body','class',3,'p_class','generationFile.py',204),
  ('class -> CLASS new_class_scope EXTENDS TYPE_IDENTIFIER class-body','class',5,'p_class','generationFile.py',205),
  ('new_class_scope -> TYPE_IDENTIFIER','new_class_scope',1,'p_new_class_scope','generationFile.py',218),
  ('class-body -> LBRACE class-body-in RBRACE','class-body',3,'p_class_body','generationFile.py',226),
  ('class-body -> LBRACE class-body-in error','class-body',3,'p_class_braces_error','generationFile.py',230),
  ('class-body-in -> class-body-in field','class-body-in',2,'p_class_body_field','generationFile.py',235),
  ('class-body-in -> class-body-in method','class-body-in',2,'p_class_body_method','generationFile.py',240),
  ('class-body-in -> <empty>','class-body-in',0,'p_class_body_empty','generationFile.py',245),
  ('field -> field_identifier SEMICOLON','field',2,'p_field','generationFile.py',249),
  ('field -> field_identifier ASSIGN expression SEMICOLON','field',4,'p_field','generationFile.py',250),
  ('field_identifier -> OBJECT_IDENTIFIER COLON type','field_identifier',3,'p_field_identifier','generationFile.py',263),
  ('method -> method_identifier LPAR formals RPAR COLON type block','method',7,'p_method','generationFile.py',269),
  ('method_identifier -> OBJECT_IDENTIFIER','method_identifier',1,'p_method_identifier','generationFile.py',280),
  ('type -> TYPE_IDENTIFIER','type',1,'p_type','generationFile.py',287),
  ('type -> INT32','type',1,'p_type','generationFile.py',288),
  ('type -> BOOL','type',1,'p_type','generationFile.py',289),
  ('type -> STRING','type',1,'p_type','generationFile.py',290),
  ('type -> UNIT','type',1,'p_type','generationFile.py',291),
  ('formals -> formal','formals',1,'p_formals','generationFile.py',299),
  ('formals -> formals COMMA formal','formals',3,'p_formals','generationFile.py',300),
  ('formals -> <empty>','formals',0,'p_formals','generationFile.py',301),
  ('formal -> OBJECT_IDENTIFIER COLON type','formal',3,'p_formal','generationFile.py',312),
  ('block -> block_lbrace inblock RBRACE','block',3,'p_block','generationFile.py',318),
  ('block_lbrace -> LBRACE','block_lbrace',1,'p_block_lbrace','generationFile.py',327),
  ('inblock -> inblock SEMICOLON expression','inblock',3,'p_block_inside','generationFile.py',332),
  ('inblock -> expression','inblock',1,'p_block_inside','generationFile.py',333),
  ('inblock -> <empty>','inblock',0,'p_block_inside','generationFile.py',334),
  ('inblock -> inblock error','inblock',2,'p_block_error','generationFile.py',345),
  ('expression -> IF expression THEN expression','expression',4,'p_if','generationFile.py',350),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_if','generationFile.py',351),
  ('expression -> WHILE expression DO expression','expression',4,'p_while','generationFile.py',366),
  ('expression -> LET let_type let_in expression','expression',4,'p_let','generationFile.py',375),
  ('expression -> LET let_type ASSIGN expression let_in expression','expression',6,'p_let','generationFile.py',376),
  ('let_type -> OBJECT_IDENTIFIER COLON type','let_type',3,'p_let_type','generationFile.py',389),
  ('let_in -> IN','let_in',1,'p_let_in','generationFile.py',394),
  ('expression -> OBJECT_IDENTIFIER ASSIGN expression','expression',3,'p_assign','generationFile.py',400),
  ('expression -> NOT expression','expression',2,'p_unary_not','generationFile.py',414),
  ('expression -> MINUS expression','expression',2,'p_unary_minus','generationFile.py',423),
  ('expression -> ISNULL expression','expression',2,'p_unary_isnull','generationFile.py',432),
  ('expression -> expression EQUAL expression','expression',3,'p_binary_equal','generationFile.py',441),
  ('expression -> expression AND expression','expression',3,'p_binary_and','generationFile.py',451),
  ('expression -> expression PLUS expression','expression',3,'p_binary_int_operators','generationFile.py',464),
  ('expression -> expression MINUS expression','expression',3,'p_binary_int_operators','generationFile.py',465),
  ('expression -> expression TIMES expression','expression',3,'p_binary_int_operators','generationFile.py',466),
  ('expression -> expression DIV expression','expression',3,'p_binary_int_operators','generationFile.py',467),
  ('expression -> expression POW expression','expression',3,'p_binary_int_operators','generationFile.py',468),
  ('expression -> expression LOWER_EQUAL expression','expression',3,'p_binary_comp_operators','generationFile.py',481),
  ('expression -> expression LOWER expression','expression',3,'p_binary_comp_operators','generationFile.py',482),
  ('expression -> call_identifier LPAR args RPAR','expression',4,'p_object_call','generationFile.py',496),
  ('expression -> expression DOT call_identifier LPAR args RPAR','expression',6,'p_object_call','generationFile.py',497),
  ('call_identifier -> OBJECT_IDENTIFIER','call_identifier',1,'p_call_identifier','generationFile.py',549),
  ('expression -> NEW TYPE_IDENTIFIER','expression',2,'p_new_type','generationFile.py',554),
  ('expression -> OBJECT_IDENTIFIER','expression',1,'p_expression_object','generationFile.py',559),
  ('expression -> SELF','expression',1,'p_expression_self','generationFile.py',572),
  ('expression -> literal','expression',1,'p_expression_literal','generationFile.py',577),
  ('expression -> LPAR RPAR','expression',2,'p_par_alone','generationFile.py',581),
  ('expression -> LPAR expression RPAR','expression',3,'p_par_expression','generationFile.py',586),
  ('expression -> LPAR expression error','expression',3,'p_par_error','generationFile.py',590),
  ('expression -> error expression RPAR','expression',3,'p_par_error','generationFile.py',591),
  ('expression -> block','expression',1,'p_expression_block','generationFile.py',596),
  ('expression -> error','expression',1,'p_expression_error','generationFile.py',600),
  ('args -> args COMMA expression','args',3,'p_args','generationFile.py',605),
  ('args -> expression','args',1,'p_args','generationFile.py',606),
  ('args -> <empty>','args',0,'p_args','generationFile.py',607),
  ('literal -> string_literal','literal',1,'p_string_literal','generationFile.py',618),
  ('literal -> INTEGER_LITERAL','literal',1,'p_integer_literal','generationFile.py',623),
  ('literal -> TRUE','literal',1,'p_boolean_literal','generationFile.py',628),
  ('literal -> FALSE','literal',1,'p_boolean_literal','generationFile.py',629),
]
