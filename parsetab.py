
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initrightASSIGNleftANDrightNOTnonassocLOWEREQUALLOWER_EQUALleftPLUSMINUSleftTIMESDIVrightISNULLUMINUSrightPOWleftDOTAND ASSIGN BOOL CLASS COLON COMMA DIV DO DOT ELSE EQUAL EXTENDS FALSE IF IN INT32 INTEGER_LITERAL ISNULL LBRACE LET LOWER LOWER_EQUAL LPAR MINUS NEW NOT OBJECT_IDENTIFIER PLUS POW RBRACE RPAR SELF SEMICOLON STRING THEN TIMES TRUE TYPE_IDENTIFIER UNIT WHILE string_literalinit : programprogram : program class\n                    | classclass : field\n                | methodclass : CLASS errorclass : expression\n                | TYPE_IDENTIFIER\n                | blockclass : CLASS new_class_scope class-body\n                | CLASS new_class_scope EXTENDS TYPE_IDENTIFIER class-bodynew_class_scope : TYPE_IDENTIFIERclass-body : LBRACE class-body-in RBRACEclass-body : LBRACE class-body-in errorclass-body-in : class-body-in fieldclass-body-in : class-body-in methodclass-body-in : field : OBJECT_IDENTIFIER COLON type SEMICOLON\n                | OBJECT_IDENTIFIER COLON type ASSIGN expression SEMICOLONmethod : OBJECT_IDENTIFIER new_variables_scope LPAR formals RPAR COLON type blocknew_variables_scope :type : TYPE_IDENTIFIER\n                | INT32\n                | BOOL\n                | STRING\n                | UNIT formals : formal\n                | formals COMMA formal\n                | formal : OBJECT_IDENTIFIER COLON typeblock : LBRACE check_block new_variables_scope inblock RBRACEcheck_block :inblock : inblock SEMICOLON expression\n                | expression\n                |inblock : inblock error expression : new_variables_scope IF expression THEN expression\n                    | new_variables_scope IF expression THEN expression ELSE expressionexpression : WHILE expression DO expressionexpression : LET let_type IN expression\n                    | LET let_type ASSIGN expression IN expressionlet_type : OBJECT_IDENTIFIER COLON typeexpression : OBJECT_IDENTIFIER ASSIGN expressionexpression : NOT expression check_bool\n                    | MINUS expression check_int %prec UMINUScheck_int :check_bool :expression : ISNULL expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIV expression\n                  | expression EQUAL expression\n                  | expression LOWER_EQUAL expression\n                  | expression LOWER expression\n                  | expression POW expression\n                  | expression AND expressionexpression : OBJECT_IDENTIFIER LPAR args RPAR\n                    | expression DOT OBJECT_IDENTIFIER LPAR args RPARexpression : NEW TYPE_IDENTIFIERexpression : OBJECT_IDENTIFIERexpression : SELFexpression : literalexpression : LPAR RPARexpression : LPAR expression RPARexpression : LPAR expression error\n                    | error expression RPARexpression : blockexpression : error\n                    | IF expression THEN expression SEMICOLON errorargs : args COMMA expression\n                | expression\n                |literal : literal_integer\n                | literal_string\n                | boolean-literalliteral_string : string_literalliteral_integer : INTEGER_LITERALboolean-literal : TRUE \n                        | FALSE'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,7,8,9,10,11,21,22,24,25,26,27,28,29,30,31,32,36,37,53,59,60,61,62,64,67,68,69,70,71,72,73,74,75,76,84,89,90,96,97,102,107,111,112,117,118,119,129,132,135,136,141,142,145,146,],[6,6,-3,-4,-5,-69,-7,-8,-9,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,-64,-47,-46,-48,-60,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,-44,-45,-18,-58,-39,-40,-11,-13,-14,-37,-31,-59,-19,-70,-41,-38,-20,]),'TYPE_IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,20,21,22,24,25,26,27,28,29,30,31,32,36,37,48,53,59,60,61,62,64,65,67,68,69,70,71,72,73,74,75,76,84,89,90,95,96,97,102,107,111,112,117,118,119,125,129,132,135,136,138,141,142,145,146,],[9,9,-3,-4,-5,34,-69,-7,-8,-9,-61,62,-62,-63,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,79,-64,-47,-46,-48,-60,-10,99,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,79,-44,-45,-18,-58,-39,-40,-11,-13,-14,79,-37,-31,-59,-19,79,-70,-41,-38,-20,]),'OBJECT_IDENTIFIER':([0,2,3,4,5,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,49,51,52,53,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,84,85,89,90,91,92,93,94,96,97,98,100,101,102,103,107,108,109,111,112,117,118,119,120,121,127,129,131,132,133,135,136,140,141,142,145,146,],[11,11,-3,-4,-5,36,-7,-8,-9,-61,36,36,36,58,36,36,36,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,36,36,36,36,36,36,36,36,36,77,36,36,36,-64,-47,-46,-48,-60,-21,-10,-17,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,104,-65,-66,36,36,36,36,-44,-45,36,122,36,-18,36,-58,36,36,-39,-40,-11,-13,-14,-15,-16,104,-37,36,-31,36,-59,-19,36,-70,-41,-38,-20,]),'WHILE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[15,15,-3,-4,-5,15,-7,-8,-9,-61,15,15,15,15,15,15,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,15,15,15,15,15,15,15,15,15,15,15,15,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,15,15,15,15,-44,-45,15,15,-18,15,-58,15,15,-39,-40,-11,-13,-14,-37,15,-31,15,-59,-19,15,-70,-41,-38,-20,]),'LET':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[16,16,-3,-4,-5,16,-7,-8,-9,-61,16,16,16,16,16,16,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,16,16,16,16,16,16,16,16,16,16,16,16,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,16,16,16,16,-44,-45,16,16,-18,16,-58,16,16,-39,-40,-11,-13,-14,-37,16,-31,16,-59,-19,16,-70,-41,-38,-20,]),'NOT':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[17,17,-3,-4,-5,17,-7,-8,-9,-61,17,17,17,17,17,17,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,17,17,17,17,17,17,17,17,17,17,17,17,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,17,17,17,17,-44,-45,17,17,-18,17,-58,17,17,-39,-40,-11,-13,-14,-37,17,-31,17,-59,-19,17,-70,-41,-38,-20,]),'MINUS':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,54,55,56,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,87,88,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,110,111,112,113,116,117,118,119,124,128,129,131,132,133,135,136,140,141,142,143,145,146,],[18,18,-3,-4,-5,18,39,-8,-9,-61,18,18,18,18,18,18,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,39,-61,-68,18,18,18,18,18,18,18,18,18,18,18,18,-64,39,39,39,39,39,-48,-60,-21,-10,-67,-49,-50,-51,-52,39,39,39,-56,39,39,39,39,-65,-66,18,18,18,18,-44,-45,18,18,-18,18,-58,18,18,39,39,39,39,39,-11,-13,-14,39,39,39,18,-31,18,-59,-19,18,-70,39,39,39,-20,]),'ISNULL':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[19,19,-3,-4,-5,19,-7,-8,-9,-61,19,19,19,19,19,19,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,19,19,19,19,19,19,19,19,19,19,19,19,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,19,19,19,19,-44,-45,19,19,-18,19,-58,19,19,-39,-40,-11,-13,-14,-37,19,-31,19,-59,-19,19,-70,-41,-38,-20,]),'NEW':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[20,20,-3,-4,-5,20,-7,-8,-9,-61,20,20,20,20,20,20,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,20,20,20,20,20,20,20,20,20,20,20,20,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,20,20,20,20,-44,-45,20,20,-18,20,-58,20,20,-39,-40,-11,-13,-14,-37,20,-31,20,-59,-19,20,-70,-41,-38,-20,]),'SELF':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[21,21,-3,-4,-5,21,-7,-8,-9,-61,21,21,21,21,21,21,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,21,21,21,21,21,21,21,21,21,21,21,21,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,21,21,21,21,-44,-45,21,21,-18,21,-58,21,21,-39,-40,-11,-13,-14,-37,21,-31,21,-59,-19,21,-70,-41,-38,-20,]),'LPAR':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,122,129,131,132,133,135,136,140,141,142,145,146,],[13,13,-3,-4,-5,13,-7,-8,-9,51,13,13,13,13,13,13,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,51,-68,13,13,13,13,13,13,13,13,13,13,85,13,13,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,101,-43,-65,-66,13,13,13,13,-44,-45,13,13,-18,13,-58,13,13,-39,-40,-11,-13,-14,-21,-37,13,-31,13,-59,-19,13,-70,-41,-38,-20,]),'error':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,54,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,100,101,102,103,107,108,109,111,112,115,116,117,118,119,120,121,129,130,131,132,133,134,135,136,140,141,142,143,145,146,],[7,7,-3,-4,-5,32,7,-7,-8,-9,-61,7,7,7,7,7,7,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,7,7,7,7,7,7,7,7,7,7,7,7,-64,90,-47,-46,-48,-60,-21,-10,-17,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,7,7,7,7,-44,-45,7,119,7,-18,7,-58,7,7,-39,-40,134,-34,-11,-13,-14,-15,-16,-37,141,7,-31,7,-36,-59,-19,7,-70,-41,-33,-38,-20,]),'IF':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[14,14,-3,-4,-5,14,-7,-8,-9,-61,52,14,14,14,14,14,14,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,14,14,14,14,14,14,14,14,14,14,14,14,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,14,14,14,14,-44,-45,14,14,-18,14,-58,14,14,-39,-40,-11,-13,-14,-37,14,-31,14,-59,-19,14,-70,-41,-38,-20,]),'LBRACE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,89,90,91,92,93,94,96,97,98,99,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,144,145,146,],[23,23,-3,-4,-5,23,-7,-8,-9,-61,23,23,23,23,23,23,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,66,-12,-61,-68,23,23,23,23,23,23,23,23,23,23,23,23,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-23,-24,-25,-26,-43,-65,-66,23,23,23,23,-44,-45,23,66,23,-18,23,-58,23,23,-39,-40,-11,-13,-14,-37,23,-31,23,-59,-19,23,-70,-41,23,-38,-20,]),'INTEGER_LITERAL':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[27,27,-3,-4,-5,27,-7,-8,-9,-61,27,27,27,27,27,27,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,27,27,27,27,27,27,27,27,27,27,27,27,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,27,27,27,27,-44,-45,27,27,-18,27,-58,27,27,-39,-40,-11,-13,-14,-37,27,-31,27,-59,-19,27,-70,-41,-38,-20,]),'string_literal':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[28,28,-3,-4,-5,28,-7,-8,-9,-61,28,28,28,28,28,28,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,28,28,28,28,28,28,28,28,28,28,28,28,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,28,28,28,28,-44,-45,28,28,-18,28,-58,28,28,-39,-40,-11,-13,-14,-37,28,-31,28,-59,-19,28,-70,-41,-38,-20,]),'TRUE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[29,29,-3,-4,-5,29,-7,-8,-9,-61,29,29,29,29,29,29,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,29,29,29,29,29,29,29,29,29,29,29,29,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,29,29,29,29,-44,-45,29,29,-18,29,-58,29,29,-39,-40,-11,-13,-14,-37,29,-31,29,-59,-19,29,-70,-41,-38,-20,]),'FALSE':([0,2,3,4,5,7,8,9,10,11,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,84,89,90,91,92,93,94,96,97,98,101,102,103,107,108,109,111,112,117,118,119,129,131,132,133,135,136,140,141,142,145,146,],[30,30,-3,-4,-5,30,-7,-8,-9,-61,30,30,30,30,30,30,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,30,30,30,30,30,30,30,30,30,30,30,30,-64,-47,-46,-48,-60,-21,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,30,30,30,30,-44,-45,30,30,-18,30,-58,30,30,-39,-40,-11,-13,-14,-37,30,-31,30,-59,-19,30,-70,-41,-38,-20,]),'$end':([1,2,3,4,5,7,8,9,10,11,21,22,24,25,26,27,28,29,30,31,32,36,37,53,59,60,61,62,64,67,68,69,70,71,72,73,74,75,76,84,89,90,96,97,102,107,111,112,117,118,119,129,132,135,136,141,142,145,146,],[0,-1,-3,-4,-5,-69,-7,-8,-9,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,-2,-6,-61,-68,-64,-47,-46,-48,-60,-10,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,-44,-45,-18,-58,-39,-40,-11,-13,-14,-37,-31,-59,-19,-70,-41,-38,-20,]),'PLUS':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,53,54,55,56,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,87,88,89,90,96,97,107,110,111,112,113,116,124,128,129,132,135,141,142,143,145,],[-69,38,-68,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,38,-61,-68,-64,38,38,38,38,38,-48,-60,-67,-49,-50,-51,-52,38,38,38,-56,38,38,38,38,-65,-66,-44,-45,-58,38,38,38,38,38,38,38,38,-31,-59,-70,38,38,38,]),'TIMES':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,53,54,55,56,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,87,88,89,90,96,97,107,110,111,112,113,116,124,128,129,132,135,141,142,143,145,],[-69,40,-68,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,40,-61,-68,-64,40,40,40,40,40,-48,-60,-67,40,40,-51,-52,40,40,40,-56,40,40,40,40,-65,-66,-44,-45,-58,40,40,40,40,40,40,40,40,-31,-59,-70,40,40,40,]),'DIV':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,53,54,55,56,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,87,88,89,90,96,97,107,110,111,112,113,116,124,128,129,132,135,141,142,143,145,],[-69,41,-68,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,41,-61,-68,-64,41,41,41,41,41,-48,-60,-67,41,41,-51,-52,41,41,41,-56,41,41,41,41,-65,-66,-44,-45,-58,41,41,41,41,41,41,41,41,-31,-59,-70,41,41,41,]),'EQUAL':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,53,54,55,56,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,87,88,89,90,96,97,107,110,111,112,113,116,124,128,129,132,135,141,142,143,145,],[-69,42,-68,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,42,-61,-68,-64,42,42,42,42,42,-48,-60,-67,-49,-50,-51,-52,None,None,None,-56,42,42,42,42,-65,-66,-44,-45,-58,42,42,42,42,42,42,42,42,-31,-59,-70,42,42,42,]),'LOWER_EQUAL':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,53,54,55,56,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,87,88,89,90,96,97,107,110,111,112,113,116,124,128,129,132,135,141,142,143,145,],[-69,43,-68,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,43,-61,-68,-64,43,43,43,43,43,-48,-60,-67,-49,-50,-51,-52,None,None,None,-56,43,43,43,43,-65,-66,-44,-45,-58,43,43,43,43,43,43,43,43,-31,-59,-70,43,43,43,]),'LOWER':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,53,54,55,56,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,87,88,89,90,96,97,107,110,111,112,113,116,124,128,129,132,135,141,142,143,145,],[-69,44,-68,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,44,-61,-68,-64,44,44,44,44,44,-48,-60,-67,-49,-50,-51,-52,None,None,None,-56,44,44,44,44,-65,-66,-44,-45,-58,44,44,44,44,44,44,44,44,-31,-59,-70,44,44,44,]),'POW':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,53,54,55,56,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,87,88,89,90,96,97,107,110,111,112,113,116,124,128,129,132,135,141,142,143,145,],[-69,45,-68,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,45,-61,-68,-64,45,45,45,45,45,45,-60,-67,45,45,45,45,45,45,45,45,45,45,45,45,-65,-66,-44,-45,-58,45,45,45,45,45,45,45,45,-31,-59,-70,45,45,45,]),'AND':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,53,54,55,56,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,87,88,89,90,96,97,107,110,111,112,113,116,124,128,129,132,135,141,142,143,145,],[-69,46,-68,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,46,-61,-68,-64,46,46,46,46,46,-48,-60,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,46,46,46,-65,-66,-44,-45,-58,46,46,46,46,46,46,46,46,-31,-59,-70,46,46,46,]),'DOT':([7,8,10,11,21,22,24,25,26,27,28,29,30,35,36,37,53,54,55,56,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,87,88,89,90,96,97,107,110,111,112,113,116,124,128,129,132,135,141,142,143,145,],[-69,47,-68,-61,-62,-63,-74,-75,-76,-78,-77,-79,-80,47,-61,-68,-64,47,47,47,47,47,47,-60,-67,47,47,47,47,47,47,47,47,47,47,47,47,-65,-66,-44,-45,-58,47,47,47,47,47,47,47,47,-31,-59,-70,47,47,47,]),'RPAR':([7,13,21,22,24,25,26,27,28,29,30,35,36,37,51,53,54,59,60,61,62,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,89,90,96,97,101,105,106,107,111,112,123,128,129,132,135,137,139,141,142,145,],[-69,53,-62,-63,-74,-75,-76,-78,-77,-79,-80,67,-61,-68,-73,-64,89,-47,-46,-48,-60,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-23,-24,-25,-26,-43,-29,107,-72,-65,-66,-44,-45,-73,126,-27,-58,-39,-40,135,-71,-37,-31,-59,-30,-28,-70,-41,-38,]),'THEN':([7,21,22,24,25,26,27,28,29,30,36,37,53,55,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,88,89,90,96,97,107,111,112,129,132,135,141,142,145,],[-69,-62,-63,-74,-75,-76,-78,-77,-79,-80,-61,-68,-64,91,-47,-46,-48,-60,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,109,-65,-66,-44,-45,-58,-39,-40,-37,-31,-59,-70,-41,-38,]),'DO':([7,21,22,24,25,26,27,28,29,30,36,37,53,56,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,89,90,96,97,107,111,112,129,132,135,141,142,145,],[-69,-62,-63,-74,-75,-76,-78,-77,-79,-80,-61,-68,-64,92,-47,-46,-48,-60,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,-44,-45,-58,-39,-40,-37,-31,-59,-70,-41,-38,]),'COMMA':([7,21,22,24,25,26,27,28,29,30,36,37,51,53,59,60,61,62,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,89,90,96,97,101,105,106,107,111,112,123,128,129,132,135,137,139,141,142,145,],[-69,-62,-63,-74,-75,-76,-78,-77,-79,-80,-61,-68,-73,-64,-47,-46,-48,-60,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-23,-24,-25,-26,-43,-29,108,-72,-65,-66,-44,-45,-73,127,-27,-58,-39,-40,108,-71,-37,-31,-59,-30,-28,-70,-41,-38,]),'SEMICOLON':([7,21,22,23,24,25,26,27,28,29,30,36,37,53,59,60,61,62,63,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,89,90,96,97,98,107,110,111,112,115,116,124,129,132,134,135,141,142,143,145,],[-69,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-61,-68,-64,-47,-46,-48,-60,-21,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,102,-22,-23,-24,-25,-26,-43,-65,-66,-44,-45,-35,-58,130,-39,-40,133,-34,136,-37,-31,-36,-59,-70,-41,-33,-38,]),'IN':([7,21,22,24,25,26,27,28,29,30,36,37,53,57,59,60,61,62,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,89,90,96,97,107,111,112,113,114,129,132,135,141,142,145,],[-69,-62,-63,-74,-75,-76,-78,-77,-79,-80,-61,-68,-64,93,-47,-46,-48,-60,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-23,-24,-25,-26,-43,-65,-66,-44,-45,-58,-39,-40,131,-42,-37,-31,-59,-70,-41,-38,]),'RBRACE':([7,21,22,23,24,25,26,27,28,29,30,36,37,53,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,84,89,90,96,97,98,100,102,107,111,112,115,116,120,121,129,132,134,135,136,141,142,143,145,146,],[-69,-62,-63,-32,-74,-75,-76,-78,-77,-79,-80,-61,-68,-64,-47,-46,-48,-60,-21,-17,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,-44,-45,-35,118,-18,-58,-39,-40,132,-34,-15,-16,-37,-31,-36,-59,-19,-70,-41,-33,-38,-20,]),'ELSE':([7,21,22,24,25,26,27,28,29,30,36,37,53,59,60,61,62,67,68,69,70,71,72,73,74,75,76,84,89,90,96,97,107,111,112,129,132,135,141,142,145,],[-69,-62,-63,-74,-75,-76,-78,-77,-79,-80,-61,-68,-64,-47,-46,-48,-60,-67,-49,-50,-51,-52,-53,-54,-55,-56,-57,-43,-65,-66,-44,-45,-58,-39,-40,140,-31,-59,-70,-41,-38,]),'COLON':([11,58,104,122,126,],[48,95,125,48,138,]),'ASSIGN':([11,36,57,78,79,80,81,82,83,114,],[49,49,94,103,-22,-23,-24,-25,-26,-42,]),'EXTENDS':([33,34,],[65,-12,]),'INT32':([48,95,125,138,],[80,80,80,80,]),'BOOL':([48,95,125,138,],[81,81,81,81,]),'STRING':([48,95,125,138,],[82,82,82,82,]),'UNIT':([48,95,125,138,],[83,83,83,83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'program':([0,],[2,]),'class':([0,2,],[3,31,]),'field':([0,2,100,],[4,4,120,]),'method':([0,2,100,],[5,5,121,]),'expression':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,51,52,91,92,93,94,98,101,103,108,109,131,133,140,],[8,8,35,54,55,56,59,60,61,68,69,70,71,72,73,74,75,76,84,87,88,110,111,112,113,116,87,124,128,129,142,143,145,]),'block':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,51,52,91,92,93,94,98,101,103,108,109,131,133,140,144,],[10,10,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,146,]),'new_variables_scope':([0,2,7,11,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,51,52,63,91,92,93,94,98,101,103,108,109,122,131,133,140,],[12,12,12,50,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,98,12,12,12,12,12,12,12,12,12,50,12,12,12,]),'literal':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,51,52,91,92,93,94,98,101,103,108,109,131,133,140,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'literal_integer':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,51,52,91,92,93,94,98,101,103,108,109,131,133,140,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'literal_string':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,51,52,91,92,93,94,98,101,103,108,109,131,133,140,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'boolean-literal':([0,2,7,13,14,15,17,18,19,38,39,40,41,42,43,44,45,46,49,51,52,91,92,93,94,98,101,103,108,109,131,133,140,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'new_class_scope':([6,],[33,]),'let_type':([16,],[57,]),'check_block':([23,],[63,]),'class-body':([33,99,],[64,117,]),'type':([48,95,125,138,],[78,114,137,144,]),'args':([51,101,],[86,123,]),'check_bool':([59,],[96,]),'check_int':([60,],[97,]),'class-body-in':([66,],[100,]),'formals':([85,],[105,]),'formal':([85,127,],[106,139,]),'inblock':([98,],[115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> program','init',1,'p_init','classCheckerFile.py',104),
  ('program -> program class','program',2,'p_program','classCheckerFile.py',108),
  ('program -> class','program',1,'p_program','classCheckerFile.py',109),
  ('class -> field','class',1,'p_field_method_error','classCheckerFile.py',116),
  ('class -> method','class',1,'p_field_method_error','classCheckerFile.py',117),
  ('class -> CLASS error','class',2,'p_class_error','classCheckerFile.py',123),
  ('class -> expression','class',1,'p_general_class_error','classCheckerFile.py',128),
  ('class -> TYPE_IDENTIFIER','class',1,'p_general_class_error','classCheckerFile.py',129),
  ('class -> block','class',1,'p_general_class_error','classCheckerFile.py',130),
  ('class -> CLASS new_class_scope class-body','class',3,'p_class','classCheckerFile.py',136),
  ('class -> CLASS new_class_scope EXTENDS TYPE_IDENTIFIER class-body','class',5,'p_class','classCheckerFile.py',137),
  ('new_class_scope -> TYPE_IDENTIFIER','new_class_scope',1,'p_new_class_scope','classCheckerFile.py',149),
  ('class-body -> LBRACE class-body-in RBRACE','class-body',3,'p_class_body','classCheckerFile.py',157),
  ('class-body -> LBRACE class-body-in error','class-body',3,'p_class_braces_error','classCheckerFile.py',161),
  ('class-body-in -> class-body-in field','class-body-in',2,'p_class_body_field','classCheckerFile.py',166),
  ('class-body-in -> class-body-in method','class-body-in',2,'p_class_body_method','classCheckerFile.py',171),
  ('class-body-in -> <empty>','class-body-in',0,'p_class_body_empty','classCheckerFile.py',177),
  ('field -> OBJECT_IDENTIFIER COLON type SEMICOLON','field',4,'p_field','classCheckerFile.py',181),
  ('field -> OBJECT_IDENTIFIER COLON type ASSIGN expression SEMICOLON','field',6,'p_field','classCheckerFile.py',182),
  ('method -> OBJECT_IDENTIFIER new_variables_scope LPAR formals RPAR COLON type block','method',8,'p_method','classCheckerFile.py',195),
  ('new_variables_scope -> <empty>','new_variables_scope',0,'p_new_variables_scope','classCheckerFile.py',204),
  ('type -> TYPE_IDENTIFIER','type',1,'p_type','classCheckerFile.py',208),
  ('type -> INT32','type',1,'p_type','classCheckerFile.py',209),
  ('type -> BOOL','type',1,'p_type','classCheckerFile.py',210),
  ('type -> STRING','type',1,'p_type','classCheckerFile.py',211),
  ('type -> UNIT','type',1,'p_type','classCheckerFile.py',212),
  ('formals -> formal','formals',1,'p_formals','classCheckerFile.py',216),
  ('formals -> formals COMMA formal','formals',3,'p_formals','classCheckerFile.py',217),
  ('formals -> <empty>','formals',0,'p_formals','classCheckerFile.py',218),
  ('formal -> OBJECT_IDENTIFIER COLON type','formal',3,'p_formal','classCheckerFile.py',227),
  ('block -> LBRACE check_block new_variables_scope inblock RBRACE','block',5,'p_block','classCheckerFile.py',231),
  ('check_block -> <empty>','check_block',0,'p_check_block','classCheckerFile.py',236),
  ('inblock -> inblock SEMICOLON expression','inblock',3,'p_block_inside','classCheckerFile.py',241),
  ('inblock -> expression','inblock',1,'p_block_inside','classCheckerFile.py',242),
  ('inblock -> <empty>','inblock',0,'p_block_inside','classCheckerFile.py',243),
  ('inblock -> inblock error','inblock',2,'p_block_error','classCheckerFile.py',252),
  ('expression -> new_variables_scope IF expression THEN expression','expression',5,'p_if','classCheckerFile.py',257),
  ('expression -> new_variables_scope IF expression THEN expression ELSE expression','expression',7,'p_if','classCheckerFile.py',258),
  ('expression -> WHILE expression DO expression','expression',4,'p_while','classCheckerFile.py',265),
  ('expression -> LET let_type IN expression','expression',4,'p_let','classCheckerFile.py',269),
  ('expression -> LET let_type ASSIGN expression IN expression','expression',6,'p_let','classCheckerFile.py',270),
  ('let_type -> OBJECT_IDENTIFIER COLON type','let_type',3,'p_let_type','classCheckerFile.py',277),
  ('expression -> OBJECT_IDENTIFIER ASSIGN expression','expression',3,'p_assign','classCheckerFile.py',282),
  ('expression -> NOT expression check_bool','expression',3,'p_unary_operators','classCheckerFile.py',286),
  ('expression -> MINUS expression check_int','expression',3,'p_unary_operators','classCheckerFile.py',287),
  ('check_int -> <empty>','check_int',0,'p_check_int','classCheckerFile.py',291),
  ('check_bool -> <empty>','check_bool',0,'p_check_bool','classCheckerFile.py',295),
  ('expression -> ISNULL expression','expression',2,'p_unary_isnull','classCheckerFile.py',299),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','classCheckerFile.py',303),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','classCheckerFile.py',304),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','classCheckerFile.py',305),
  ('expression -> expression DIV expression','expression',3,'p_binary_operators','classCheckerFile.py',306),
  ('expression -> expression EQUAL expression','expression',3,'p_binary_operators','classCheckerFile.py',307),
  ('expression -> expression LOWER_EQUAL expression','expression',3,'p_binary_operators','classCheckerFile.py',308),
  ('expression -> expression LOWER expression','expression',3,'p_binary_operators','classCheckerFile.py',309),
  ('expression -> expression POW expression','expression',3,'p_binary_operators','classCheckerFile.py',310),
  ('expression -> expression AND expression','expression',3,'p_binary_operators','classCheckerFile.py',311),
  ('expression -> OBJECT_IDENTIFIER LPAR args RPAR','expression',4,'p_object_call','classCheckerFile.py',316),
  ('expression -> expression DOT OBJECT_IDENTIFIER LPAR args RPAR','expression',6,'p_object_call','classCheckerFile.py',317),
  ('expression -> NEW TYPE_IDENTIFIER','expression',2,'p_new_type','classCheckerFile.py',325),
  ('expression -> OBJECT_IDENTIFIER','expression',1,'p_expression_object','classCheckerFile.py',329),
  ('expression -> SELF','expression',1,'p_expression_self','classCheckerFile.py',333),
  ('expression -> literal','expression',1,'p_expression_literal','classCheckerFile.py',337),
  ('expression -> LPAR RPAR','expression',2,'p_par_alone','classCheckerFile.py',341),
  ('expression -> LPAR expression RPAR','expression',3,'p_par_expression','classCheckerFile.py',345),
  ('expression -> LPAR expression error','expression',3,'p_par_error','classCheckerFile.py',349),
  ('expression -> error expression RPAR','expression',3,'p_par_error','classCheckerFile.py',350),
  ('expression -> block','expression',1,'p_expression_block','classCheckerFile.py',355),
  ('expression -> error','expression',1,'p_expression_error','classCheckerFile.py',359),
  ('expression -> IF expression THEN expression SEMICOLON error','expression',6,'p_expression_error','classCheckerFile.py',360),
  ('args -> args COMMA expression','args',3,'p_args','classCheckerFile.py',368),
  ('args -> expression','args',1,'p_args','classCheckerFile.py',369),
  ('args -> <empty>','args',0,'p_args','classCheckerFile.py',370),
  ('literal -> literal_integer','literal',1,'p_literal','classCheckerFile.py',379),
  ('literal -> literal_string','literal',1,'p_literal','classCheckerFile.py',380),
  ('literal -> boolean-literal','literal',1,'p_literal','classCheckerFile.py',381),
  ('literal_string -> string_literal','literal_string',1,'p_literal_string','classCheckerFile.py',385),
  ('literal_integer -> INTEGER_LITERAL','literal_integer',1,'p_literal_integer','classCheckerFile.py',389),
  ('boolean-literal -> TRUE','boolean-literal',1,'p_boolean_literal','classCheckerFile.py',393),
  ('boolean-literal -> FALSE','boolean-literal',1,'p_boolean_literal','classCheckerFile.py',394),
]
